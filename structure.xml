<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="ImboClient API documentation">
  <file path="tests/bootstrap.php" hash="b132e9a6910608e30a04318ad4181245" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <include line="18" type="Require" package="Default">
      <name/>
    </include>
  </file>
  <file path="tests/ImboClient/ClientTest.php" hash="4dc8f191a6aa4a4d8e5df052bab2821d" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient" line="22" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ClientTest</name>
      <full_name>\ImboClient\ClientTest</full_name>
      <docblock line="18">
        <description></description>
        <long-description></long-description>
        <tag line="18" name="package" description="Test suite"/>
        <tag line="18" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" namespace="ImboClient" package="Default">
        <name>$client</name>
        <default></default>
        <docblock line="23">
          <description>Client instance</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="\ImboClient\Client">
            <type by_reference="false">\ImboClient\Client</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="ImboClient" package="Default">
        <name>$serverUrl</name>
        <default>'http://host'</default>
        <docblock line="30">
          <description>The server URL passed to the constructor</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="ImboClient" package="Default">
        <name>$publicKey</name>
        <default>'key'</default>
        <docblock line="37">
          <description>Public key</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="ImboClient" package="Default">
        <name>$privateKey</name>
        <default>'8495c97ea3a313c12c0661dc5526e769'</default>
        <docblock line="44">
          <description>Private key</description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="ImboClient" package="Default">
        <name>$imageIdentifier</name>
        <default>'23d7f91b25f3013fcc75ce070c40e004'</default>
        <docblock line="51">
          <description>Image identifier used for tests</description>
          <long-description></long-description>
          <tag line="51" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="65" namespace="ImboClient" package="Default">
        <name>$signedUrlPattern</name>
        <default>'/signature=.*?&amp;timestamp=\d\d\d\d-\d\d-\d\dT\d\d%3A\d\d%3A\d\dZ$/'</default>
        <docblock line="58">
          <description>Regexp pattern that matches the end of a signed URL</description>
          <long-description>&lt;p&gt;This value is used in some matchers in this test case.&lt;/p&gt;</long-description>
          <tag line="58" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="75" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="67">
          <description>Set up the client and the driver mock</description>
          <long-description></long-description>
          <tag line="67" name="covers" description="\ImboClient\Client::__construct" refers="\ImboClient\Client::__construct"/>
          <tag line="67" name="covers" description="\ImboClient\Client::setDriver" refers="\ImboClient\Client::setDriver"/>
          <tag line="67" name="covers" description="\ImboClient\Version::getVersionString" refers="\ImboClient\Version::getVersionString"/>
          <tag line="67" name="covers" description="\ImboClient\Version::getVersionNumber" refers="\ImboClient\Version::getVersionNumber"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="84" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="81">
          <description>Tear down the client and the driver mock</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="98" package="Test suite">
        <name>testThrowsExceptionWhenTryingToAddLocalImageThatDoesNotExist</name>
        <full_name>testThrowsExceptionWhenTryingToAddLocalImageThatDoesNotExist</full_name>
        <docblock line="89">
          <description>When trying to add a local image that does not exist the client must throw an exception</description>
          <long-description></long-description>
          <tag line="89" name="expectedException" description="InvalidArgumentException"/>
          <tag line="89" name="expectedExceptionMessage" description="File does not exist: foobar"/>
          <tag line="89" name="covers" description="\ImboClient\Client::addImage" refers="\ImboClient\Client::addImage"/>
          <tag line="89" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="89" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="111" package="Test suite">
        <name>testThrowsExceptionWhenTryingToAddEmptyLocalImage</name>
        <full_name>testThrowsExceptionWhenTryingToAddEmptyLocalImage</full_name>
        <docblock line="102">
          <description>When trying to add an empty local image the client must throw an exception</description>
          <long-description></long-description>
          <tag line="102" name="expectedException" description="InvalidArgumentException"/>
          <tag line="102" name="expectedExceptionMessage" description="File is of zero length:"/>
          <tag line="102" name="covers" description="\ImboClient\Client::addImage" refers="\ImboClient\Client::addImage"/>
          <tag line="102" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="102" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="125" package="Test suite">
        <name>testReturnsResponseWhenAddingValidLocalImage</name>
        <full_name>testReturnsResponseWhenAddingValidLocalImage</full_name>
        <docblock line="116">
          <description>The client must be able to add a valid local image</description>
          <long-description></long-description>
          <tag line="116" name="covers" description="\ImboClient\Client::addImage" refers="\ImboClient\Client::addImage"/>
          <tag line="116" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
          <tag line="116" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="116" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
          <tag line="116" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="145" package="Test suite">
        <name>testReturnsResponseWhenAddingInMemoryImage</name>
        <full_name>testReturnsResponseWhenAddingInMemoryImage</full_name>
        <docblock line="137">
          <description>The client must be able to add an in-memory image</description>
          <long-description></long-description>
          <tag line="137" name="covers" description="\ImboClient\Client::addImageFromString" refers="\ImboClient\Client::addImageFromString"/>
          <tag line="137" name="covers" description="\ImboClient\Client::getImageIdentifierFromString" refers="\ImboClient\Client::getImageIdentifierFromString"/>
          <tag line="137" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
          <tag line="137" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="164" package="Test suite">
        <name>testThrowsExceptionWhenTryingToAddEmptyInMemoryImage</name>
        <full_name>testThrowsExceptionWhenTryingToAddEmptyInMemoryImage</full_name>
        <docblock line="157">
          <description>The client must throw an exception when trying to add an empty in-memory image</description>
          <long-description></long-description>
          <tag line="157" name="expectedException" description="ImboClient\Exception\InvalidArgumentException"/>
          <tag line="157" name="expectedExceptionMessage" description="Specified image is empty"/>
          <tag line="157" name="covers" description="\ImboClient\Client::addImageFromString" refers="\ImboClient\Client::addImageFromString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="174" package="Test suite">
        <name>testReturnsResponseWhenAddingARemoteImage</name>
        <full_name>testReturnsResponseWhenAddingARemoteImage</full_name>
        <docblock line="168">
          <description>The client must be able to fetch an image from an URL and add it</description>
          <long-description></long-description>
          <tag line="168" name="covers" description="\ImboClient\Client::addImageFromUrl" refers="\ImboClient\Client::addImageFromUrl"/>
          <tag line="168" name="covers" description="\ImboClient\Client::addImageFromString" refers="\ImboClient\Client::addImageFromString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="202" package="Test suite">
        <name>testThrowsExceptionWhenTryingToAddEmptyRemoteImage</name>
        <full_name>testThrowsExceptionWhenTryingToAddEmptyRemoteImage</full_name>
        <docblock line="194">
          <description>The client must throw an exception when trying to add an empty remote image</description>
          <long-description></long-description>
          <tag line="194" name="expectedException" description="ImboClient\Exception\InvalidArgumentException"/>
          <tag line="194" name="expectedExceptionMessage" description="Specified image is empty"/>
          <tag line="194" name="covers" description="\ImboClient\Client::addImageFromUrl" refers="\ImboClient\Client::addImageFromUrl"/>
          <tag line="194" name="covers" description="\ImboClient\Client::addImageFromString" refers="\ImboClient\Client::addImageFromString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="224" package="Test suite">
        <name>testReturnsResponseWhenAddingARemoteImageSpecifiedByImageUrlInstance</name>
        <full_name>testReturnsResponseWhenAddingARemoteImageSpecifiedByImageUrlInstance</full_name>
        <docblock line="217">
          <description>The client must be able to fetch an image from an URL specified by an ImboClient\Url\Image
instance and add it</description>
          <long-description></long-description>
          <tag line="217" name="covers" description="\ImboClient\Client::addImageFromUrl" refers="\ImboClient\Client::addImageFromUrl"/>
          <tag line="217" name="covers" description="\ImboClient\Client::addImageFromString" refers="\ImboClient\Client::addImageFromString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="254" package="Test suite">
        <name>testReturnsResponseAfterDeletingAnImage</name>
        <full_name>testReturnsResponseAfterDeletingAnImage</full_name>
        <docblock line="247">
          <description>The client must return a valid response after deleting a remote image</description>
          <long-description></long-description>
          <tag line="247" name="covers" description="\ImboClient\Client::deleteImage" refers="\ImboClient\Client::deleteImage"/>
          <tag line="247" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
          <tag line="247" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="272" package="Test suite">
        <name>testReturnsResponseAfterEditingMetadata</name>
        <full_name>testReturnsResponseAfterEditingMetadata</full_name>
        <docblock line="265">
          <description>The client must return a valid response after editing metadata</description>
          <long-description></long-description>
          <tag line="265" name="covers" description="\ImboClient\Client::editMetadata" refers="\ImboClient\Client::editMetadata"/>
          <tag line="265" name="covers" description="\ImboClient\Client::getMetadataUrl" refers="\ImboClient\Client::getMetadataUrl"/>
          <tag line="265" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="299" package="Test suite">
        <name>testReturnsResponseAfterReplacingMetadata</name>
        <full_name>testReturnsResponseAfterReplacingMetadata</full_name>
        <docblock line="292">
          <description>The client must return a valid response after having replaced metadata</description>
          <long-description></long-description>
          <tag line="292" name="covers" description="\ImboClient\Client::replaceMetadata" refers="\ImboClient\Client::replaceMetadata"/>
          <tag line="292" name="covers" description="\ImboClient\Client::getMetadataUrl" refers="\ImboClient\Client::getMetadataUrl"/>
          <tag line="292" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="324" package="Test suite">
        <name>testReturnsResponseAfterDeletingMetadata</name>
        <full_name>testReturnsResponseAfterDeletingMetadata</full_name>
        <docblock line="317">
          <description>The client must return a valid response after having deleted metadata</description>
          <long-description></long-description>
          <tag line="317" name="covers" description="\ImboClient\Client::deleteMetadata" refers="\ImboClient\Client::deleteMetadata"/>
          <tag line="317" name="covers" description="\ImboClient\Client::getMetadataUrl" refers="\ImboClient\Client::getMetadataUrl"/>
          <tag line="317" name="covers" description="\ImboClient\Client::getSignedUrl" refers="\ImboClient\Client::getSignedUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="341" package="Test suite">
        <name>testReturnsArrayWithMetadataWhenFetchingMetadata</name>
        <full_name>testReturnsArrayWithMetadataWhenFetchingMetadata</full_name>
        <docblock line="335">
          <description>The client must return metadata as an array when fetching metadata</description>
          <long-description></long-description>
          <tag line="335" name="covers" description="\ImboClient\Client::getMetadata" refers="\ImboClient\Client::getMetadata"/>
          <tag line="335" name="covers" description="\ImboClient\Client::getMetadataUrl" refers="\ImboClient\Client::getMetadataUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="366" package="Test suite">
        <name>testReturnsResponseAfterRequestingImageUsingHttpHead</name>
        <full_name>testReturnsResponseAfterRequestingImageUsingHttpHead</full_name>
        <docblock line="360">
          <description>The client must return a valid response after requesting an image using HEAD</description>
          <long-description></long-description>
          <tag line="360" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
          <tag line="360" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="387" package="Test suite">
        <name>testThrowsExceptionWhenCheckingIfAnImageExistsUsingALocalImageThatDoesNotExist</name>
        <full_name>testThrowsExceptionWhenCheckingIfAnImageExistsUsingALocalImageThatDoesNotExist</full_name>
        <docblock line="377">
          <description>The client must throw an exception when checking if an image exists using a local image that
does not exist</description>
          <long-description></long-description>
          <tag line="377" name="expectedException" description="InvalidArgumentException"/>
          <tag line="377" name="expectedExceptionMessage" description="File does not exist: foobar"/>
          <tag line="377" name="covers" description="\ImboClient\Client::imageExists" refers="\ImboClient\Client::imageExists"/>
          <tag line="377" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="377" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="401" package="Test suite">
        <name>testThrowsExceptionWhenCheckingIfAnImageExistsUsingAnEmptyLocalImage</name>
        <full_name>testThrowsExceptionWhenCheckingIfAnImageExistsUsingAnEmptyLocalImage</full_name>
        <docblock line="391">
          <description>The client must throw an exception when checking if an image exists using an empty local
image</description>
          <long-description></long-description>
          <tag line="391" name="expectedException" description="InvalidArgumentException"/>
          <tag line="391" name="expectedExceptionMessage" description="File is of zero length:"/>
          <tag line="391" name="covers" description="\ImboClient\Client::imageExists" refers="\ImboClient\Client::imageExists"/>
          <tag line="391" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="391" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="414" package="Test suite">
        <name>testReturnsFalseWhenCheckingIfARemoteImageExistsAndTheImageDoesNotExist</name>
        <full_name>testReturnsFalseWhenCheckingIfARemoteImageExistsAndTheImageDoesNotExist</full_name>
        <docblock line="406">
          <description>When checking if a remote image does not exist using a valid local file the client must
return false</description>
          <long-description></long-description>
          <tag line="406" name="covers" description="\ImboClient\Client::imageExists" refers="\ImboClient\Client::imageExists"/>
          <tag line="406" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="406" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="435" package="Test suite">
        <name>testReturnsTrueWhenCheckingIfARemoteImageExistsAndTheImageExists</name>
        <full_name>testReturnsTrueWhenCheckingIfARemoteImageExistsAndTheImageExists</full_name>
        <docblock line="428">
          <description>The client must return true when the remote image exists</description>
          <long-description></long-description>
          <tag line="428" name="covers" description="\ImboClient\Client::imageExists" refers="\ImboClient\Client::imageExists"/>
          <tag line="428" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="428" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="457" package="Test suite">
        <name>testThrowsExceptionWhenCheckingIfAnImageExistsAndTheServerRespondsWithAnErrorOtherThan404</name>
        <full_name>testThrowsExceptionWhenCheckingIfAnImageExistsAndTheServerRespondsWithAnErrorOtherThan404</full_name>
        <docblock line="447">
          <description>If the server responds with an error other than 404 the client must re-throw the exception</description>
          <long-description></long-description>
          <tag line="447" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="447" name="expectedExceptionMessage" description="Internal Server Error"/>
          <tag line="447" name="expectedExceptionCode" description="500"/>
          <tag line="447" name="covers" description="\ImboClient\Client::imageExists" refers="\ImboClient\Client::imageExists"/>
          <tag line="447" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="447" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="475" package="Test suite">
        <name>testReturnsFalseWhenCheckingIfARemoteImageIdentifierExistsAndTheImageDoesNotExist</name>
        <full_name>testReturnsFalseWhenCheckingIfARemoteImageIdentifierExistsAndTheImageDoesNotExist</full_name>
        <docblock line="468">
          <description>When checking if an image identifier exists on the server and it does not,
the client must return false</description>
          <long-description></long-description>
          <tag line="468" name="covers" description="\ImboClient\Client::imageIdentifierExists" refers="\ImboClient\Client::imageIdentifierExists"/>
          <tag line="468" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="495" package="Test suite">
        <name>testReturnsTrueWhenCheckingIfARemoteImageIdentifierExistsAndTheImageExists</name>
        <full_name>testReturnsTrueWhenCheckingIfARemoteImageIdentifierExistsAndTheImageExists</full_name>
        <docblock line="488">
          <description>When checking if an image identifier exists on the server and it does,
the client must return true</description>
          <long-description></long-description>
          <tag line="488" name="covers" description="\ImboClient\Client::imageIdentifierExists" refers="\ImboClient\Client::imageIdentifierExists"/>
          <tag line="488" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="515" package="Test suite">
        <name>testThrowsExceptionWhenCheckingIfAnImageIdentifierExistsAndTheServerRespondsWithAnErrorOtherThan404</name>
        <full_name>testThrowsExceptionWhenCheckingIfAnImageIdentifierExistsAndTheServerRespondsWithAnErrorOtherThan404</full_name>
        <docblock line="506">
          <description>If the server responds with an error other than 404 the client must re-throw the exception</description>
          <long-description></long-description>
          <tag line="506" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="506" name="expectedExceptionMessage" description="Internal Server Error"/>
          <tag line="506" name="expectedExceptionCode" description="500"/>
          <tag line="506" name="covers" description="\ImboClient\Client::imageIdentifierExists" refers="\ImboClient\Client::imageIdentifierExists"/>
          <tag line="506" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="532" package="Test suite">
        <name>testCanGenerateAnImageUrlInstanceBasedOnAnImageIdentifier</name>
        <full_name>testCanGenerateAnImageUrlInstanceBasedOnAnImageIdentifier</full_name>
        <docblock line="525">
          <description>The client must be able to return an ImboClient\Url\Image instance based on an image
identifier</description>
          <long-description></long-description>
          <tag line="525" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
          <tag line="525" name="covers" description="\ImboClient\Client::getHostForImageIdentifier" refers="\ImboClient\Client::getHostForImageIdentifier"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="546" package="Test suite">
        <name>testCanGenerateAMetadataUrlInstanceBasedOnAnImageIdentifier</name>
        <full_name>testCanGenerateAMetadataUrlInstanceBasedOnAnImageIdentifier</full_name>
        <docblock line="539">
          <description>The client must be able to return an ImboClient\Url\Metadata instance based on an image
identifier</description>
          <long-description></long-description>
          <tag line="539" name="covers" description="\ImboClient\Client::getMetadataUrl" refers="\ImboClient\Client::getMetadataUrl"/>
          <tag line="539" name="covers" description="\ImboClient\Client::getHostForImageIdentifier" refers="\ImboClient\Client::getHostForImageIdentifier"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="559" package="Test suite">
        <name>testCanGenerateAnUserUrlInstanceBasedOnParametersToConstructor</name>
        <full_name>testCanGenerateAnUserUrlInstanceBasedOnParametersToConstructor</full_name>
        <docblock line="553">
          <description>The client must be able to return an ImboClient\Url\User instance based on the info given in
the constructor</description>
          <long-description></long-description>
          <tag line="553" name="covers" description="\ImboClient\Client::getUserUrl" refers="\ImboClient\Client::getUserUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="569" package="Test suite">
        <name>testCanGenerateAStatusUrlInstanceBasedOnParametersToConstructor</name>
        <full_name>testCanGenerateAStatusUrlInstanceBasedOnParametersToConstructor</full_name>
        <docblock line="563">
          <description>The client must be able to return an ImboClient\Url\Status instance based on the info given
in the constructor</description>
          <long-description></long-description>
          <tag line="563" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="579" package="Test suite">
        <name>testCanGenerateAnImagesUrlInstanceBasedOnParametersToConstructor</name>
        <full_name>testCanGenerateAnImagesUrlInstanceBasedOnParametersToConstructor</full_name>
        <docblock line="573">
          <description>The client must be able to return an ImboClient\Url\Images instance based on the info given
in the constructor</description>
          <long-description></long-description>
          <tag line="573" name="covers" description="\ImboClient\Client::getImagesUrl" refers="\ImboClient\Client::getImagesUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="589" package="Test suite">
        <name>testSelectsTheFirstUrlInTheSetWhenGeneratingAStatusUrlInstance</name>
        <full_name>testSelectsTheFirstUrlInTheSetWhenGeneratingAStatusUrlInstance</full_name>
        <docblock line="583">
          <description>The client always selects the first URL in the set when generating an ImboClient\Url\Images
instance</description>
          <long-description></long-description>
          <tag line="583" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="607" package="Test suite">
        <name>testSelectsTheFirstUrlInTheSetWhenGeneratingAnUserUrlInstance</name>
        <full_name>testSelectsTheFirstUrlInTheSetWhenGeneratingAnUserUrlInstance</full_name>
        <docblock line="601">
          <description>The client always selects the first URL in the set when generating an ImboClient\Url\Images
instance</description>
          <long-description></long-description>
          <tag line="601" name="covers" description="\ImboClient\Client::getUserUrl" refers="\ImboClient\Client::getUserUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="624" package="Test suite">
        <name>testSelectsTheFirstUrlInTheSetWhenGeneratingAnImagesUrlInstance</name>
        <full_name>testSelectsTheFirstUrlInTheSetWhenGeneratingAnImagesUrlInstance</full_name>
        <docblock line="618">
          <description>The client always selects the first URL in the set when generating an ImboClient\Url\Images
instance</description>
          <long-description></long-description>
          <tag line="618" name="covers" description="\ImboClient\Client::getImagesUrl" refers="\ImboClient\Client::getImagesUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="640" package="Test suite">
        <name>getMultiHostServers</name>
        <full_name>getMultiHostServers</full_name>
        <docblock line="635">
          <description>Server hostname data provider</description>
          <long-description></long-description>
          <tag line="635" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="671" package="Test suite">
        <name>testSelectsTheSameHostFromASetOfHostsBasedOnAnImageIdentifierEveryTime</name>
        <full_name>testSelectsTheSameHostFromASetOfHostsBasedOnAnImageIdentifierEveryTime</full_name>
        <docblock line="662">
          <description>The client must be able to pick the same host from a set of hosts based on an image
identifier every time</description>
          <long-description></long-description>
          <tag line="662" name="dataProvider" description="getMultiHostServers()"/>
          <tag line="662" name="covers" description="\ImboClient\Client::__construct" refers="\ImboClient\Client::__construct"/>
          <tag line="662" name="covers" description="\ImboClient\Client::parseUrls" refers="\ImboClient\Client::parseUrls"/>
          <tag line="662" name="covers" description="\ImboClient\Client::getHostForImageIdentifier" refers="\ImboClient\Client::getHostForImageIdentifier"/>
        </docblock>
        <argument line="671">
          <name>$hosts</name>
          <default></default>
          <type/>
        </argument>
        <argument line="671">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="671">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="686" package="Test suite">
        <name>testCanFetchNumberOfImagesAUserHas</name>
        <full_name>testCanFetchNumberOfImagesAUserHas</full_name>
        <docblock line="680">
          <description>The client must be able to return the number of images a user has stored remotely</description>
          <long-description></long-description>
          <tag line="680" name="covers" description="\ImboClient\Client::getNumImages" refers="\ImboClient\Client::getNumImages"/>
          <tag line="680" name="covers" description="\ImboClient\Client::getUserUrl" refers="\ImboClient\Client::getUserUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="707" package="Test suite">
        <name>getImageData</name>
        <full_name>getImageData</full_name>
        <docblock line="700">
          <description>Get images data provider</description>
          <long-description>&lt;p&gt;This data provider returns data in the format the images resource on the imbo server does&lt;/p&gt;</long-description>
          <tag line="700" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="783" package="Test suite">
        <name>testCanFetchImagesWithoutUsingAQueryObject</name>
        <full_name>testCanFetchImagesWithoutUsingAQueryObject</full_name>
        <docblock line="776">
          <description>The client must be able to fetch images using no particular query</description>
          <long-description></long-description>
          <tag line="776" name="dataProvider" description="getImageData()"/>
          <tag line="776" name="covers" description="\ImboClient\Client::getImages" refers="\ImboClient\Client::getImages"/>
          <tag line="776" name="covers" description="\ImboClient\Client::getImagesUrl" refers="\ImboClient\Client::getImagesUrl"/>
        </docblock>
        <argument line="783">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="806" package="Test suite">
        <name>testCanFetchImagesUsingAQueryObject</name>
        <full_name>testCanFetchImagesUsingAQueryObject</full_name>
        <docblock line="799">
          <description>The client must be able to fetch images using a query object</description>
          <long-description></long-description>
          <tag line="799" name="dataProvider" description="getImageData()"/>
          <tag line="799" name="covers" description="\ImboClient\Client::getImages" refers="\ImboClient\Client::getImages"/>
          <tag line="799" name="covers" description="\ImboClient\Client::getImagesUrl" refers="\ImboClient\Client::getImagesUrl"/>
        </docblock>
        <argument line="806">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="837" package="Test suite">
        <name>testCanFetchBinaryImageDataBasedOnAnImageIdentifier</name>
        <full_name>testCanFetchBinaryImageDataBasedOnAnImageIdentifier</full_name>
        <docblock line="830">
          <description>The client must be able to return the binary image data from a remote image using an image identifier</description>
          <long-description></long-description>
          <tag line="830" name="covers" description="\ImboClient\Client::getImageData" refers="\ImboClient\Client::getImageData"/>
          <tag line="830" name="covers" description="\ImboClient\Client::getImageUrl" refers="\ImboClient\Client::getImageUrl"/>
          <tag line="830" name="covers" description="\ImboClient\Client::getImageDataFromUrl" refers="\ImboClient\Client::getImageDataFromUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="858" package="Test suite">
        <name>testCanFetchBinaryImageDataBasedOnAnImageUrlInstance</name>
        <full_name>testCanFetchBinaryImageDataBasedOnAnImageUrlInstance</full_name>
        <docblock line="853">
          <description>The client must be able to return the binary image data from a remote image using an URL</description>
          <long-description></long-description>
          <tag line="853" name="covers" description="\ImboClient\Client::getImageDataFromUrl" refers="\ImboClient\Client::getImageDataFromUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="884" package="Test suite">
        <name>getServerUrls</name>
        <full_name>getServerUrls</full_name>
        <docblock line="879">
          <description>Server URLs data provider</description>
          <long-description></long-description>
          <tag line="879" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="910" package="Test suite">
        <name>testAcceptsDifferentTypesOfHostUrlsInTheConstructor</name>
        <full_name>testAcceptsDifferentTypesOfHostUrlsInTheConstructor</full_name>
        <docblock line="902">
          <description>The client must be able to parse different URLs</description>
          <long-description></long-description>
          <tag line="902" name="dataProvider" description="getServerUrls()"/>
          <tag line="902" name="covers" description="\ImboClient\Client::__construct" refers="\ImboClient\Client::__construct"/>
          <tag line="902" name="covers" description="\ImboClient\Client::getServerUrls" refers="\ImboClient\Client::getServerUrls"/>
          <tag line="902" name="covers" description="\ImboClient\Client::parseUrls" refers="\ImboClient\Client::parseUrls"/>
        </docblock>
        <argument line="910">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="910">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="922" package="Test suite">
        <name>getImageResponseHeaders</name>
        <full_name>getImageResponseHeaders</full_name>
        <docblock line="919">
          <description></description>
          <long-description></long-description>
          <tag line="919" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="936" package="Test suite">
        <name>testCanReturnImagePropertiesOfAnExistingImage</name>
        <full_name>testCanReturnImagePropertiesOfAnExistingImage</full_name>
        <docblock line="929">
          <description>The client must be able to return image properties of an existing remote image</description>
          <long-description></long-description>
          <tag line="929" name="dataProvider" description="getImageResponseHeaders"/>
          <tag line="929" name="covers" description="\ImboClient\Client::getImageProperties" refers="\ImboClient\Client::getImageProperties"/>
          <tag line="929" name="covers" description="\ImboClient\Client::headImage" refers="\ImboClient\Client::headImage"/>
        </docblock>
        <argument line="936">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$size</name>
          <default></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$mime</name>
          <default></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="977" package="Test suite">
        <name>getImageIdentifiers</name>
        <full_name>getImageIdentifiers</full_name>
        <docblock line="972">
          <description>Get image paths and MD5 sums</description>
          <long-description></long-description>
          <tag line="972" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="993" package="Test suite">
        <name>testCanGenerateAnImageIdentifierBasedOnAValidLocalImage</name>
        <full_name>testCanGenerateAnImageIdentifierBasedOnAValidLocalImage</full_name>
        <docblock line="985">
          <description>The client must be able to generate an image identifier using a valid local image</description>
          <long-description></long-description>
          <tag line="985" name="dataProvider" description="getImageIdentifiers"/>
          <tag line="985" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="985" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
          <tag line="985" name="covers" description="\ImboClient\Client::generateImageIdentifier" refers="\ImboClient\Client::generateImageIdentifier"/>
        </docblock>
        <argument line="993">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="993">
          <name>$checksum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1006" package="Test suite">
        <name>testThrowsExceptionWhenTryingToGenerateImageIdentifierBasedOnALocalImageThatDoesNotExist</name>
        <full_name>testThrowsExceptionWhenTryingToGenerateImageIdentifierBasedOnALocalImageThatDoesNotExist</full_name>
        <docblock line="997">
          <description>The client must throw an exception when trying to generate an image identifier based on a
non-existing local image</description>
          <long-description></long-description>
          <tag line="997" name="expectedException" description="InvalidArgumentException"/>
          <tag line="997" name="expectedExceptionMessage" description="File does not exist: foobar"/>
          <tag line="997" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="997" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1019" package="Test suite">
        <name>testThrowsExceptionWhenTryingToGenerateImageIdentifierBasedOnAnEmptyLocalImage</name>
        <full_name>testThrowsExceptionWhenTryingToGenerateImageIdentifierBasedOnAnEmptyLocalImage</full_name>
        <docblock line="1010">
          <description>The client must throw an exception when trying to generate an image identifier based on an
empty local image</description>
          <long-description></long-description>
          <tag line="1010" name="expectedException" description="InvalidArgumentException"/>
          <tag line="1010" name="expectedExceptionMessage" description="File is of zero length:"/>
          <tag line="1010" name="covers" description="\ImboClient\Client::getImageIdentifier" refers="\ImboClient\Client::getImageIdentifier"/>
          <tag line="1010" name="covers" description="\ImboClient\Client::validateLocalFile" refers="\ImboClient\Client::validateLocalFile"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1032" package="Test suite">
        <name>testCanGenerateAnImageIdentifierBasedOnAString</name>
        <full_name>testCanGenerateAnImageIdentifierBasedOnAString</full_name>
        <docblock line="1024">
          <description>The client must be able to generate an image identifier based on a string (binary image
data)</description>
          <long-description></long-description>
          <tag line="1024" name="dataProvider" description="getImageIdentifiers"/>
          <tag line="1024" name="covers" description="\ImboClient\Client::getImageIdentifierFromString" refers="\ImboClient\Client::getImageIdentifierFromString"/>
          <tag line="1024" name="covers" description="\ImboClient\Client::generateImageIdentifier" refers="\ImboClient\Client::generateImageIdentifier"/>
        </docblock>
        <argument line="1032">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1032">
          <name>$checksum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1044" package="Test suite">
        <name>getSignatureData</name>
        <full_name>getSignatureData</full_name>
        <docblock line="1039">
          <description>Data provider for testing signature generation</description>
          <long-description></long-description>
          <tag line="1039" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1080" package="Test suite">
        <name>testCanGenerateValidSignaturesForRemoteWriteOperations</name>
        <full_name>testCanGenerateValidSignaturesForRemoteWriteOperations</full_name>
        <docblock line="1073">
          <description>The client must be able to correctly generate signatures based on the HTTP method, the URL
and a timestamp</description>
          <long-description></long-description>
          <tag line="1073" name="dataProvider" description="getSignatureData"/>
          <tag line="1073" name="covers" description="\ImboClient\Client::generateSignature" refers="\ImboClient\Client::generateSignature"/>
        </docblock>
        <argument line="1080">
          <name>$httpMethod</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1080">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1080">
          <name>$timestamp</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1080">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1095" package="Test suite">
        <name>testCanGetServerStatusWhenServerRespondsWithHttp200</name>
        <full_name>testCanGetServerStatusWhenServerRespondsWithHttp200</full_name>
        <docblock line="1089">
          <description>The client must be able to fetch server status</description>
          <long-description></long-description>
          <tag line="1089" name="covers" description="\ImboClient\Client::getServerStatus" refers="\ImboClient\Client::getServerStatus"/>
          <tag line="1089" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1120" package="Test suite">
        <name>testCanGetServerStatusWhenServerRespondsWithHttp500</name>
        <full_name>testCanGetServerStatusWhenServerRespondsWithHttp500</full_name>
        <docblock line="1113">
          <description>The client must be able to fetch server status when the server response with HTTP 500
Internal Server Error</description>
          <long-description></long-description>
          <tag line="1113" name="covers" description="\ImboClient\Client::getServerStatus" refers="\ImboClient\Client::getServerStatus"/>
          <tag line="1113" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1151" package="Test suite">
        <name>testThrowsExceptionWhenTryingToGetServerStatusAndServerRespondsWithErrorOtherThanHttp500</name>
        <full_name>testThrowsExceptionWhenTryingToGetServerStatusAndServerRespondsWithErrorOtherThanHttp500</full_name>
        <docblock line="1141">
          <description>When trying to fetch server status and the server responds with an error (other than HTTP
500 Internal Server Error) the client must throw an exception</description>
          <long-description></long-description>
          <tag line="1141" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="1141" name="expectedExceptionMessage" description="Bad Request"/>
          <tag line="1141" name="expectedExceptionCode" description="400"/>
          <tag line="1141" name="covers" description="\ImboClient\Client::getServerStatus" refers="\ImboClient\Client::getServerStatus"/>
          <tag line="1141" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1169" package="Test suite">
        <name>testThrowsExceptionWhenTryingToGetServerStatusAndServerDoesNotRespond</name>
        <full_name>testThrowsExceptionWhenTryingToGetServerStatusAndServerDoesNotRespond</full_name>
        <docblock line="1160">
          <description>When trying to fetch server status and the server does not respond the client must throw an
exception</description>
          <long-description></long-description>
          <tag line="1160" name="expectedException" description="ImboClient\Exception\RuntimeException"/>
          <tag line="1160" name="expectedExceptionMessage" description="An error occured"/>
          <tag line="1160" name="covers" description="\ImboClient\Client::getServerStatus" refers="\ImboClient\Client::getServerStatus"/>
          <tag line="1160" name="covers" description="\ImboClient\Client::getStatusUrl" refers="\ImboClient\Client::getStatusUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1183" package="Test suite">
        <name>getUrls</name>
        <full_name>getUrls</full_name>
        <docblock line="1178">
          <description>Fetch different URLs</description>
          <long-description></long-description>
          <tag line="1178" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1215" package="Test suite">
        <name>testCanParseUrlsMissingHttp</name>
        <full_name>testCanParseUrlsMissingHttp</full_name>
        <docblock line="1208">
          <description>The client must be able to parse different types of "lazy" URLs passed to the constructor</description>
          <long-description></long-description>
          <tag line="1208" name="dataProvider" description="getUrls()"/>
          <tag line="1208" name="covers" description="\ImboClient\Client::__construct" refers="\ImboClient\Client::__construct"/>
          <tag line="1208" name="covers" description="\ImboClient\Client::parseUrls" refers="\ImboClient\Client::parseUrls"/>
        </docblock>
        <argument line="1215">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="1215">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1227" package="Test suite">
        <name>testUsesCurlAsADefaultDriver</name>
        <full_name>testUsesCurlAsADefaultDriver</full_name>
        <docblock line="1224">
          <description></description>
          <long-description></long-description>
          <tag line="1224" name="covers" description="\ImboClient\Client::__construct" refers="\ImboClient\Client::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="1241" package="Test suite">
        <name>getResponseMock</name>
        <full_name>getResponseMock</full_name>
        <docblock line="1236">
          <description>Get a mock of the response interface</description>
          <long-description></long-description>
          <tag line="1236" name="return" description="" type="\ImboClient\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="1251" package="Test suite">
        <name>testCanGetUserInfoWhenServerRespondsWithHttp200</name>
        <full_name>testCanGetUserInfoWhenServerRespondsWithHttp200</full_name>
        <docblock line="1245">
          <description>The client must be able to fetch user information</description>
          <long-description></long-description>
          <tag line="1245" name="covers" description="\ImboClient\Client::getUserInfo" refers="\ImboClient\Client::getUserInfo"/>
          <tag line="1245" name="covers" description="\ImboClient\Client::getUserUrl" refers="\ImboClient\Client::getUserUrl"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="18" code="50005">No short description for class \ImboClient\ClientTest</critical>
      <error line="662" code="50015">Argument $hosts is missing from the Docblock of testSelectsTheSameHostFromASetOfHostsBasedOnAnImageIdentifierEveryTime()</error>
      <error line="662" code="50015">Argument $imageIdentifier is missing from the Docblock of testSelectsTheSameHostFromASetOfHostsBasedOnAnImageIdentifierEveryTime()</error>
      <error line="662" code="50015">Argument $expected is missing from the Docblock of testSelectsTheSameHostFromASetOfHostsBasedOnAnImageIdentifierEveryTime()</error>
      <error line="776" code="50015">Argument $data is missing from the Docblock of testCanFetchImagesWithoutUsingAQueryObject()</error>
      <error line="799" code="50015">Argument $data is missing from the Docblock of testCanFetchImagesUsingAQueryObject()</error>
      <error line="902" code="50015">Argument $url is missing from the Docblock of testAcceptsDifferentTypesOfHostUrlsInTheConstructor()</error>
      <error line="902" code="50015">Argument $expected is missing from the Docblock of testAcceptsDifferentTypesOfHostUrlsInTheConstructor()</error>
      <error line="919" code="50012">No short description for method getImageResponseHeaders()</error>
      <error line="929" code="50015">Argument $width is missing from the Docblock of testCanReturnImagePropertiesOfAnExistingImage()</error>
      <error line="929" code="50015">Argument $height is missing from the Docblock of testCanReturnImagePropertiesOfAnExistingImage()</error>
      <error line="929" code="50015">Argument $size is missing from the Docblock of testCanReturnImagePropertiesOfAnExistingImage()</error>
      <error line="929" code="50015">Argument $mime is missing from the Docblock of testCanReturnImagePropertiesOfAnExistingImage()</error>
      <error line="929" code="50015">Argument $extension is missing from the Docblock of testCanReturnImagePropertiesOfAnExistingImage()</error>
      <error line="985" code="50015">Argument $path is missing from the Docblock of testCanGenerateAnImageIdentifierBasedOnAValidLocalImage()</error>
      <error line="985" code="50015">Argument $checksum is missing from the Docblock of testCanGenerateAnImageIdentifierBasedOnAValidLocalImage()</error>
      <error line="1024" code="50015">Argument $path is missing from the Docblock of testCanGenerateAnImageIdentifierBasedOnAString()</error>
      <error line="1024" code="50015">Argument $checksum is missing from the Docblock of testCanGenerateAnImageIdentifierBasedOnAString()</error>
      <error line="1073" code="50015">Argument $httpMethod is missing from the Docblock of testCanGenerateValidSignaturesForRemoteWriteOperations()</error>
      <error line="1073" code="50015">Argument $url is missing from the Docblock of testCanGenerateValidSignaturesForRemoteWriteOperations()</error>
      <error line="1073" code="50015">Argument $timestamp is missing from the Docblock of testCanGenerateValidSignaturesForRemoteWriteOperations()</error>
      <error line="1073" code="50015">Argument $expected is missing from the Docblock of testCanGenerateValidSignaturesForRemoteWriteOperations()</error>
      <error line="1208" code="50015">Argument $url is missing from the Docblock of testCanParseUrlsMissingHttp()</error>
      <error line="1208" code="50015">Argument $expected is missing from the Docblock of testCanParseUrlsMissingHttp()</error>
      <error line="1224" code="50012">No short description for method testUsesCurlAsADefaultDriver()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/UrlTest.php" hash="2e7111c18a2a128454636902f2e7b30a" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>UrlTest</name>
      <full_name>\ImboClient\Url\UrlTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Url" package="Default">
        <name>$url</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Url\ImboClient\Url\Url">
            <type by_reference="false">\ImboClient\Url\ImboClient\Url\Url</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="ImboClient\Url" package="Default">
        <name>$baseUrl</name>
        <default>'http://imbo'</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="ImboClient\Url" package="Default">
        <name>$publicKey</name>
        <default>'key'</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="ImboClient\Url" package="Default">
        <name>$privateKey</name>
        <default>'key'</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="43" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="38">
          <description>Set up the url instance</description>
          <long-description></long-description>
          <tag line="38" name="covers" description="\ImboClient\Url\Url::__construct" refers="\ImboClient\Url\Url::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="50" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="47">
          <description>Tear down the url instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="60" package="Test suite">
        <name>testReturnsTheCompleteUrlWhenUsedInAStringContext</name>
        <full_name>testReturnsTheCompleteUrlWhenUsedInAStringContext</full_name>
        <docblock line="54">
          <description>The url instance must return the complete url when used in a string context</description>
          <long-description></long-description>
          <tag line="54" name="covers" description="\ImboClient\Url\Url::__toString" refers="\ImboClient\Url\Url::__toString"/>
          <tag line="54" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="71" package="Test suite">
        <name>testCanAutomaticallyCreateAnAccessTokenInstanceIfOneIsNotSet</name>
        <full_name>testCanAutomaticallyCreateAnAccessTokenInstanceIfOneIsNotSet</full_name>
        <docblock line="66">
          <description>The url instance must create an access token if one does not exist when first accessed</description>
          <long-description></long-description>
          <tag line="66" name="covers" description="\ImboClient\Url\Url::getAccessToken" refers="\ImboClient\Url\Url::getAccessToken"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="81" package="Test suite">
        <name>testCanSetAndGetAnAccessTokenInstance</name>
        <full_name>testCanSetAndGetAnAccessTokenInstance</full_name>
        <docblock line="75">
          <description>The url instance must be able to set and get an access token instance</description>
          <long-description></long-description>
          <tag line="75" name="covers" description="\ImboClient\Url\Url::getAccessToken" refers="\ImboClient\Url\Url::getAccessToken"/>
          <tag line="75" name="covers" description="\ImboClient\Url\Url::setAccessToken" refers="\ImboClient\Url\Url::setAccessToken"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="93" package="Test suite">
        <name>getQueryParams</name>
        <full_name>getQueryParams</full_name>
        <docblock line="88">
          <description>Fetch query parameters</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="118" package="Test suite">
        <name>testCanAddQueryParametersThatIsAddedInTheQueryString</name>
        <full_name>testCanAddQueryParametersThatIsAddedInTheQueryString</full_name>
        <docblock line="108">
          <description>The url instance must be able to add different query parameters that is added in the query
string</description>
          <long-description></long-description>
          <tag line="108" name="dataProvider" description="getQueryParams"/>
          <tag line="108" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="108" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="108" name="covers" description="\ImboClient\Url\Url::getUrlEncoded" refers="\ImboClient\Url\Url::getUrlEncoded"/>
          <tag line="108" name="covers" description="\ImboClient\Url\Url::getQueryString" refers="\ImboClient\Url\Url::getQueryString"/>
        </docblock>
        <argument line="118">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$expectedUrl</name>
          <default></default>
          <type/>
        </argument>
        <argument line="118">
          <name>$expectedEscapedUrl</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="133" package="Test suite">
        <name>testAddMultipleQueryParamsAndReset</name>
        <full_name>testAddMultipleQueryParamsAndReset</full_name>
        <docblock line="124">
          <description>The url instance must be able to reset the added query parameters</description>
          <long-description></long-description>
          <tag line="124" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="124" name="covers" description="\ImboClient\Url\Url::reset" refers="\ImboClient\Url\Url::reset"/>
          <tag line="124" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="124" name="covers" description="\ImboClient\Url\Url::getUrlEncoded" refers="\ImboClient\Url\Url::getUrlEncoded"/>
          <tag line="124" name="covers" description="\ImboClient\Url\Url::getQueryString" refers="\ImboClient\Url\Url::getQueryString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="160" package="Test suite">
        <name>testCanAddQueryParametersUsingTheMagicCallMethod</name>
        <full_name>testCanAddQueryParametersUsingTheMagicCallMethod</full_name>
        <docblock line="151">
          <description>The url instance can add query parameters using the magic __call method</description>
          <long-description></long-description>
          <tag line="151" name="covers" description="\ImboClient\Url\Url::__call" refers="\ImboClient\Url\Url::__call"/>
          <tag line="151" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="151" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="151" name="covers" description="\ImboClient\Url\Url::getUrlEncoded" refers="\ImboClient\Url\Url::getUrlEncoded"/>
          <tag line="151" name="covers" description="\ImboClient\Url\Url::getQueryString" refers="\ImboClient\Url\Url::getQueryString"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="178" package="Test suite">
        <name>testDoesNotAppendAccessTokenIfPublicOrPrivateKeyAreMissing</name>
        <full_name>testDoesNotAppendAccessTokenIfPublicOrPrivateKeyAreMissing</full_name>
        <docblock line="173">
          <description>The url instance does not append an access token if the public or private key is missing</description>
          <long-description></long-description>
          <tag line="173" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="189" package="Test suite">
      <extends>\ImboClient\Url\Url</extends>
      <name>UrlImplementation</name>
      <full_name>\ImboClient\Url\UrlImplementation</full_name>
      <docblock line="184">
        <description>URL implementation used for this test case</description>
        <long-description></long-description>
        <tag line="184" name="package" description="Test suite"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="193" package="Test suite">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="190">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\UrlTest</critical>
      <critical line="18" code="50019">No short description for property $url</critical>
      <critical line="23" code="50019">No short description for property $baseUrl</critical>
      <critical line="28" code="50019">No short description for property $publicKey</critical>
      <critical line="33" code="50019">No short description for property $privateKey</critical>
      <error line="108" code="50015">Argument $key is missing from the Docblock of testCanAddQueryParametersThatIsAddedInTheQueryString()</error>
      <error line="108" code="50015">Argument $value is missing from the Docblock of testCanAddQueryParametersThatIsAddedInTheQueryString()</error>
      <error line="108" code="50015">Argument $expectedUrl is missing from the Docblock of testCanAddQueryParametersThatIsAddedInTheQueryString()</error>
      <error line="108" code="50015">Argument $expectedEscapedUrl is missing from the Docblock of testCanAddQueryParametersThatIsAddedInTheQueryString()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/Images/QueryTest.php" hash="021d5a5a1282dce1793dd035ef82e5d0" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url\Images" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>QueryTest</name>
      <full_name>\ImboClient\Url\Images\QueryTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Url\Images" package="Default">
        <name>$query</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Url\Images\ImboClient\Url\Images\Query">
            <type by_reference="false">\ImboClient\Url\Images\ImboClient\Url\Images\Query</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="26" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="23">
          <description>Set up the query instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="33" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the query instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="42" package="Test suite">
        <name>testSetsADefaultPageValueOf1</name>
        <full_name>testSetsADefaultPageValueOf1</full_name>
        <docblock line="37">
          <description>The default page value is 1</description>
          <long-description></long-description>
          <tag line="37" name="covers" description="\ImboClient\Url\Images\Query::page" refers="\ImboClient\Url\Images\Query::page"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="51" package="Test suite">
        <name>testSetsADefaultLimitValueOf20</name>
        <full_name>testSetsADefaultLimitValueOf20</full_name>
        <docblock line="46">
          <description>The default limit is 20</description>
          <long-description></long-description>
          <tag line="46" name="covers" description="\ImboClient\Url\Images\Query::limit" refers="\ImboClient\Url\Images\Query::limit"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="58" package="Test suite">
        <name>testSetsADefaultReturnmetadataValueOfFalse</name>
        <full_name>testSetsADefaultReturnmetadataValueOfFalse</full_name>
        <docblock line="55">
          <description></description>
          <long-description></long-description>
          <tag line="55" name="covers" description="\ImboClient\Url\Images\Query::returnMetadata" refers="\ImboClient\Url\Images\Query::returnMetadata"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="65" package="Test suite">
        <name>testSetsAnEmptyDefaultMetadataQuery</name>
        <full_name>testSetsAnEmptyDefaultMetadataQuery</full_name>
        <docblock line="62">
          <description></description>
          <long-description></long-description>
          <tag line="62" name="covers" description="\ImboClient\Url\Images\Query::metadataQuery" refers="\ImboClient\Url\Images\Query::metadataQuery"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="72" package="Test suite">
        <name>testSetsADefaultFromValueOfNull</name>
        <full_name>testSetsADefaultFromValueOfNull</full_name>
        <docblock line="69">
          <description></description>
          <long-description></long-description>
          <tag line="69" name="covers" description="\ImboClient\Url\Images\Query::from" refers="\ImboClient\Url\Images\Query::from"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="79" package="Test suite">
        <name>testSetsADefaultToValueOfNull</name>
        <full_name>testSetsADefaultToValueOfNull</full_name>
        <docblock line="76">
          <description></description>
          <long-description></long-description>
          <tag line="76" name="covers" description="\ImboClient\Url\Images\Query::to" refers="\ImboClient\Url\Images\Query::to"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="88" package="Test suite">
        <name>testCanSetAndGetThePageValue</name>
        <full_name>testCanSetAndGetThePageValue</full_name>
        <docblock line="83">
          <description>The query instance must be able to set and get the page value</description>
          <long-description></long-description>
          <tag line="83" name="covers" description="\ImboClient\Url\Images\Query::page" refers="\ImboClient\Url\Images\Query::page"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="98" package="Test suite">
        <name>testCanSetAndGetTheLimitValue</name>
        <full_name>testCanSetAndGetTheLimitValue</full_name>
        <docblock line="93">
          <description>The query instance must be able to set and get the limit value</description>
          <long-description></long-description>
          <tag line="93" name="covers" description="\ImboClient\Url\Images\Query::limit" refers="\ImboClient\Url\Images\Query::limit"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="106" package="Test suite">
        <name>testCanSetAndGetTheReturnmetadataValue</name>
        <full_name>testCanSetAndGetTheReturnmetadataValue</full_name>
        <docblock line="103">
          <description></description>
          <long-description></long-description>
          <tag line="103" name="covers" description="\ImboClient\Url\Images\Query::returnMetadata" refers="\ImboClient\Url\Images\Query::returnMetadata"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="114" package="Test suite">
        <name>testCanSetAndGetAMetadataQuery</name>
        <full_name>testCanSetAndGetAMetadataQuery</full_name>
        <docblock line="111">
          <description></description>
          <long-description></long-description>
          <tag line="111" name="covers" description="\ImboClient\Url\Images\Query::metadataQuery" refers="\ImboClient\Url\Images\Query::metadataQuery"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="123" package="Test suite">
        <name>testCanSetAndGetTheFromValue</name>
        <full_name>testCanSetAndGetTheFromValue</full_name>
        <docblock line="120">
          <description></description>
          <long-description></long-description>
          <tag line="120" name="covers" description="\ImboClient\Url\Images\Query::from" refers="\ImboClient\Url\Images\Query::from"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="132" package="Test suite">
        <name>testCanSetAndGetTheToValue</name>
        <full_name>testCanSetAndGetTheToValue</full_name>
        <docblock line="129">
          <description></description>
          <long-description></long-description>
          <tag line="129" name="covers" description="\ImboClient\Url\Images\Query::to" refers="\ImboClient\Url\Images\Query::to"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\Images\QueryTest</critical>
      <critical line="18" code="50019">No short description for property $query</critical>
      <error line="55" code="50012">No short description for method testSetsADefaultReturnmetadataValueOfFalse()</error>
      <error line="62" code="50012">No short description for method testSetsAnEmptyDefaultMetadataQuery()</error>
      <error line="69" code="50012">No short description for method testSetsADefaultFromValueOfNull()</error>
      <error line="76" code="50012">No short description for method testSetsADefaultToValueOfNull()</error>
      <error line="103" code="50012">No short description for method testCanSetAndGetTheReturnmetadataValue()</error>
      <error line="111" code="50012">No short description for method testCanSetAndGetAMetadataQuery()</error>
      <error line="120" code="50012">No short description for method testCanSetAndGetTheFromValue()</error>
      <error line="129" code="50012">No short description for method testCanSetAndGetTheToValue()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/Images/ImageTest.php" hash="96b1d415267d9701f566b4577ea40928" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url\Images" line="20" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ImageTest</name>
      <full_name>\ImboClient\Url\Images\ImageTest</full_name>
      <docblock line="15">
        <description></description>
        <long-description></long-description>
        <tag line="15" name="package" description="Test suite"/>
        <tag line="15" name="author" description="Espen Hovlandsdal &lt;espen@hovlandsdal.com&gt;"/>
        <tag line="15" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="24" namespace="ImboClient\Url\Images" package="Default">
        <name>$image</name>
        <default></default>
        <docblock line="21">
          <description></description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="\ImboClient\Url\Images\Image">
            <type by_reference="false">\ImboClient\Url\Images\Image</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="29" namespace="ImboClient\Url\Images" package="Default">
        <name>$data</name>
        <default>array('imageIdentifier' =&gt; '995b506ba1772e6a3fa25a2e3e618b08', 'size' =&gt; 655114, 'extension' =&gt; 'png', 'mime' =&gt; 'image/png', 'added' =&gt; 'Thu, 15 Nov 2012 16:58:06 GMT', 'width' =&gt; 640, 'height' =&gt; 480, 'checksum' =&gt; '995b506ba1772e6a3fa25a2e3e618b08', 'publicKey' =&gt; 'testsuite', 'updated' =&gt; 'Thu, 15 Nov 2012 16:58:06 GMT')</default>
        <docblock line="26">
          <description></description>
          <long-description></long-description>
          <tag line="26" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="48" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="42">
          <description>Set up the image instance</description>
          <long-description></long-description>
          <tag line="42" name="covers" description="\ImboClient\Url\Images\Image::__construct" refers="\ImboClient\Url\Images\Image::__construct"/>
          <tag line="42" name="covers" description="\ImboClient\Url\Images\Image::populate" refers="\ImboClient\Url\Images\Image::populate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="55" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="52">
          <description>Tear down the image instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="65" package="Test suite">
        <name>testCanGetImageIdentifierAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetImageIdentifierAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="59">
          <description>The image instance must be able to fetch the image identifier</description>
          <long-description></long-description>
          <tag line="59" name="covers" description="\ImboClient\Url\Images\Image::getIdentifier" refers="\ImboClient\Url\Images\Image::getIdentifier"/>
          <tag line="59" name="covers" description="\ImboClient\Url\Images\Image::setIdentifier" refers="\ImboClient\Url\Images\Image::setIdentifier"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="75" package="Test suite">
        <name>testCanGetSizeAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetSizeAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="69">
          <description>The image instance must be able to fetch the size</description>
          <long-description></long-description>
          <tag line="69" name="covers" description="\ImboClient\Url\Images\Image::getSize" refers="\ImboClient\Url\Images\Image::getSize"/>
          <tag line="69" name="covers" description="\ImboClient\Url\Images\Image::setSize" refers="\ImboClient\Url\Images\Image::setSize"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="85" package="Test suite">
        <name>testCanGetExtensionAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetExtensionAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="79">
          <description>The image instance must be able to fetch the extension</description>
          <long-description></long-description>
          <tag line="79" name="covers" description="\ImboClient\Url\Images\Image::getExtension" refers="\ImboClient\Url\Images\Image::getExtension"/>
          <tag line="79" name="covers" description="\ImboClient\Url\Images\Image::setExtension" refers="\ImboClient\Url\Images\Image::setExtension"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="95" package="Test suite">
        <name>testCanGetMimeTypeAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetMimeTypeAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="89">
          <description>The image instance must be able to fetch the mime type</description>
          <long-description></long-description>
          <tag line="89" name="covers" description="\ImboClient\Url\Images\Image::getMimeType" refers="\ImboClient\Url\Images\Image::getMimeType"/>
          <tag line="89" name="covers" description="\ImboClient\Url\Images\Image::setMimeType" refers="\ImboClient\Url\Images\Image::setMimeType"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="105" package="Test suite">
        <name>testCanGetAddedDateAsDatetimeInstanceAfterBeingPopulatedThroughConstructorAsFormattedString</name>
        <full_name>testCanGetAddedDateAsDatetimeInstanceAfterBeingPopulatedThroughConstructorAsFormattedString</full_name>
        <docblock line="99">
          <description>The image instance must be able to fetch the added date as a DateTime instance</description>
          <long-description></long-description>
          <tag line="99" name="covers" description="\ImboClient\Url\Images\Image::getAddedDate" refers="\ImboClient\Url\Images\Image::getAddedDate"/>
          <tag line="99" name="covers" description="\ImboClient\Url\Images\Image::setAddedDate" refers="\ImboClient\Url\Images\Image::setAddedDate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="116" package="Test suite">
        <name>testCanGetUpdatedDateAsDatetimeInstanceAfterBeingPopulatedThroughConstructorAsFormattedString</name>
        <full_name>testCanGetUpdatedDateAsDatetimeInstanceAfterBeingPopulatedThroughConstructorAsFormattedString</full_name>
        <docblock line="110">
          <description>The image instance must be able to fetch the updated date as a DateTime instance</description>
          <long-description></long-description>
          <tag line="110" name="covers" description="\ImboClient\Url\Images\Image::getUpdatedDate" refers="\ImboClient\Url\Images\Image::getUpdatedDate"/>
          <tag line="110" name="covers" description="\ImboClient\Url\Images\Image::setUpdatedDate" refers="\ImboClient\Url\Images\Image::setUpdatedDate"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="127" package="Test suite">
        <name>testCanGetWidthAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetWidthAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="121">
          <description>The image instance must be able to fetch the width</description>
          <long-description></long-description>
          <tag line="121" name="covers" description="\ImboClient\Url\Images\Image::getWidth" refers="\ImboClient\Url\Images\Image::getWidth"/>
          <tag line="121" name="covers" description="\ImboClient\Url\Images\Image::setWidth" refers="\ImboClient\Url\Images\Image::setWidth"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="137" package="Test suite">
        <name>testCanGetHeightAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetHeightAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="131">
          <description>The image instance must be able to fetch the height</description>
          <long-description></long-description>
          <tag line="131" name="covers" description="\ImboClient\Url\Images\Image::getHeight" refers="\ImboClient\Url\Images\Image::getHeight"/>
          <tag line="131" name="covers" description="\ImboClient\Url\Images\Image::setHeight" refers="\ImboClient\Url\Images\Image::setHeight"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="147" package="Test suite">
        <name>testCanGetChecksumAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetChecksumAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="141">
          <description>The image instance must be able to fetch the checksum</description>
          <long-description></long-description>
          <tag line="141" name="covers" description="\ImboClient\Url\Images\Image::getChecksum" refers="\ImboClient\Url\Images\Image::getChecksum"/>
          <tag line="141" name="covers" description="\ImboClient\Url\Images\Image::setChecksum" refers="\ImboClient\Url\Images\Image::setChecksum"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="157" package="Test suite">
        <name>testCanGetPublicKeyAfterBeingPopulatedThroughConstructor</name>
        <full_name>testCanGetPublicKeyAfterBeingPopulatedThroughConstructor</full_name>
        <docblock line="151">
          <description>The image instance must be able to fetch the public key</description>
          <long-description></long-description>
          <tag line="151" name="covers" description="\ImboClient\Url\Images\Image::getPublicKey" refers="\ImboClient\Url\Images\Image::getPublicKey"/>
          <tag line="151" name="covers" description="\ImboClient\Url\Images\Image::setPublicKey" refers="\ImboClient\Url\Images\Image::setPublicKey"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="15" code="50005">No short description for class \ImboClient\Url\Images\ImageTest</critical>
      <critical line="21" code="50019">No short description for property $image</critical>
      <critical line="26" code="50019">No short description for property $data</critical>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/UserTest.php" hash="587c1a1c1f131123cfdcd43cd1679685" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>UserTest</name>
      <full_name>\ImboClient\Url\UserTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="23" package="Test suite">
        <name>getUrlData</name>
        <full_name>getUrlData</full_name>
        <docblock line="18">
          <description>Fetch URL data</description>
          <long-description></long-description>
          <tag line="18" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="38" package="Test suite">
        <name>testCanGenerateACompleteUrlIncludingAnAccessToken</name>
        <full_name>testCanGenerateACompleteUrlIncludingAnAccessToken</full_name>
        <docblock line="30">
          <description>The user URL must be able to generate a complete URL with an access token appended</description>
          <long-description></long-description>
          <tag line="30" name="dataProvider" description="getUrlData"/>
          <tag line="30" name="covers" description="\ImboClient\Url\Url::__construct" refers="\ImboClient\Url\Url::__construct"/>
          <tag line="30" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="30" name="covers" description="\ImboClient\Url\User::getResourceUrl" refers="\ImboClient\Url\User::getResourceUrl"/>
        </docblock>
        <argument line="38">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\UserTest</critical>
      <error line="30" code="50015">Argument $host is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="30" code="50015">Argument $publicKey is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="30" code="50015">Argument $expected is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/AccessTokenTest.php" hash="172dc82739a95580a578ec40b7c2b4e5" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>AccessTokenTest</name>
      <full_name>\ImboClient\Url\AccessTokenTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Url" package="Default">
        <name>$accessToken</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Url\ImboClient\Url\AccessTokenInterface">
            <type by_reference="false">\ImboClient\Url\ImboClient\Url\AccessTokenInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="26" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="23">
          <description>Set up the access token instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="33" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the access token instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="42" package="Test suite">
        <name>testWillGenerateTheSameKeyEveryTimeGivenTheSameUrlAndKey</name>
        <full_name>testWillGenerateTheSameKeyEveryTimeGivenTheSameUrlAndKey</full_name>
        <docblock line="37">
          <description>The access token must generate the samen token every time given the same URL and key</description>
          <long-description></long-description>
          <tag line="37" name="covers" description="\ImboClient\Url\AccessToken::generateToken" refers="\ImboClient\Url\AccessToken::generateToken"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="57" package="Test suite">
        <name>getKeys</name>
        <full_name>getKeys</full_name>
        <docblock line="52">
          <description>Fetch keys pairs</description>
          <long-description></long-description>
          <tag line="52" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="76" package="Test suite">
        <name>testWillGenerateDifferentTokensGivenDifferentKeys</name>
        <full_name>testWillGenerateDifferentTokensGivenDifferentKeys</full_name>
        <docblock line="70">
          <description>The access token must generate different tokens given different keys</description>
          <long-description></long-description>
          <tag line="70" name="dataProvider" description="getKeys"/>
          <tag line="70" name="covers" description="\ImboClient\Url\AccessToken::generateToken" refers="\ImboClient\Url\AccessToken::generateToken"/>
        </docblock>
        <argument line="76">
          <name>$key1</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$key2</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\AccessTokenTest</critical>
      <critical line="18" code="50019">No short description for property $accessToken</critical>
      <error line="70" code="50015">Argument $key1 is missing from the Docblock of testWillGenerateDifferentTokensGivenDifferentKeys()</error>
      <error line="70" code="50015">Argument $key2 is missing from the Docblock of testWillGenerateDifferentTokensGivenDifferentKeys()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/MetadataTest.php" hash="e1b85097819ffddd206ba96c0dd7c42b" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>MetadataTest</name>
      <full_name>\ImboClient\Url\MetadataTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="23" package="Test suite">
        <name>getUrlData</name>
        <full_name>getUrlData</full_name>
        <docblock line="18">
          <description>Fetch URL data</description>
          <long-description></long-description>
          <tag line="18" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="37" package="Test suite">
        <name>testCanGenerateACompleteUrlIncludingAnAccessToken</name>
        <full_name>testCanGenerateACompleteUrlIncludingAnAccessToken</full_name>
        <docblock line="29">
          <description>The metadata URL must be able to generate a complete URL with an access token appended</description>
          <long-description></long-description>
          <tag line="29" name="dataProvider" description="getUrlData"/>
          <tag line="29" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="29" name="covers" description="\ImboClient\Url\Metadata::getResourceUrl" refers="\ImboClient\Url\Metadata::getResourceUrl"/>
          <tag line="29" name="covers" description="\ImboClient\Url\Metadata::__construct" refers="\ImboClient\Url\Metadata::__construct"/>
        </docblock>
        <argument line="37">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\MetadataTest</critical>
      <error line="29" code="50015">Argument $host is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="29" code="50015">Argument $publicKey is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="29" code="50015">Argument $image is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="29" code="50015">Argument $expected is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/ImageTest.php" hash="a4ce39fb65cc8a0ddea735b907b3ed27" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ImageTest</name>
      <full_name>\ImboClient\Url\ImageTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Url" package="Default">
        <name>$url</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Url\Image">
            <type by_reference="false">\ImboClient\Url\Image</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="ImboClient\Url" package="Default">
        <name>$baseUrl</name>
        <default>'http://host'</default>
        <docblock line="23">
          <description></description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="ImboClient\Url" package="Default">
        <name>$publicKey</name>
        <default>'key'</default>
        <docblock line="28">
          <description></description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="ImboClient\Url" package="Default">
        <name>$privateKey</name>
        <default>'41ebdff96ee9986119a5033f30d9a6c8'</default>
        <docblock line="33">
          <description></description>
          <long-description></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="ImboClient\Url" package="Default">
        <name>$imageIdentifier</name>
        <default>'3aea3926533f3c7b87d5500789aa2a17'</default>
        <docblock line="38">
          <description></description>
          <long-description></long-description>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="48" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="43">
          <description>Set up the image URL instance</description>
          <long-description></long-description>
          <tag line="43" name="covers" description="\ImboClient\Url\Image::__construct" refers="\ImboClient\Url\Image::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="60" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="57">
          <description>Tear down the image URL instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="71" package="Test suite">
        <name>testCanApplyTheBorderTransformationUsingDefaultParameters</name>
        <full_name>testCanApplyTheBorderTransformationUsingDefaultParameters</full_name>
        <docblock line="64">
          <description>The image URL must be able to apply the border transformation with no custom parameters</description>
          <long-description></long-description>
          <tag line="64" name="covers" description="\ImboClient\Url\Image::border" refers="\ImboClient\Url\Image::border"/>
          <tag line="64" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="64" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="86" package="Test suite">
        <name>testCanApplyTheBorderTransformationUsingCustomParameters</name>
        <full_name>testCanApplyTheBorderTransformationUsingCustomParameters</full_name>
        <docblock line="79">
          <description>The image URL must be able to apply the border transformation with custom parameters</description>
          <long-description></long-description>
          <tag line="79" name="covers" description="\ImboClient\Url\Image::border" refers="\ImboClient\Url\Image::border"/>
          <tag line="79" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="79" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="101" package="Test suite">
        <name>testCanApplyTheCompressTransformationUsingDefaultParameters</name>
        <full_name>testCanApplyTheCompressTransformationUsingDefaultParameters</full_name>
        <docblock line="94">
          <description>The image URL must be able to apply the compress transformation with no custom parameters</description>
          <long-description></long-description>
          <tag line="94" name="covers" description="\ImboClient\Url\Image::compress" refers="\ImboClient\Url\Image::compress"/>
          <tag line="94" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="94" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="113" package="Test suite">
        <name>testCanApplyTheCompressTransformationUsingCustomParameters</name>
        <full_name>testCanApplyTheCompressTransformationUsingCustomParameters</full_name>
        <docblock line="106">
          <description>The image URL must be able to apply the compress transformation with custom parameters</description>
          <long-description></long-description>
          <tag line="106" name="covers" description="\ImboClient\Url\Image::compress" refers="\ImboClient\Url\Image::compress"/>
          <tag line="106" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="106" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="123" package="Test suite">
        <name>getExtensions</name>
        <full_name>getExtensions</full_name>
        <docblock line="118">
          <description>Get different extensions</description>
          <long-description></long-description>
          <tag line="118" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="138" package="Test suite">
        <name>testCanApplyTheConvertTransformationUsingACustomExtension</name>
        <full_name>testCanApplyTheConvertTransformationUsingACustomExtension</full_name>
        <docblock line="131">
          <description>The image URL must be able to apply the convert transformation using custom extensions</description>
          <long-description></long-description>
          <tag line="131" name="dataProvider" description="getExtensions"/>
          <tag line="131" name="covers" description="\ImboClient\Url\Image::convert" refers="\ImboClient\Url\Image::convert"/>
          <tag line="131" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
        <argument line="138">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="159" package="Test suite">
        <name>testCanApplyTheConvertTransformationUsingTheGifConvenienceMethod</name>
        <full_name>testCanApplyTheConvertTransformationUsingTheGifConvenienceMethod</full_name>
        <docblock line="152">
          <description>The image URL must be able to apply the convert transformation using the gif() convenience
method</description>
          <long-description></long-description>
          <tag line="152" name="covers" description="\ImboClient\Url\Image::gif" refers="\ImboClient\Url\Image::gif"/>
          <tag line="152" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="179" package="Test suite">
        <name>testCanApplyTheConvertTransformationUsingTheJpgConvenienceMethod</name>
        <full_name>testCanApplyTheConvertTransformationUsingTheJpgConvenienceMethod</full_name>
        <docblock line="172">
          <description>The image URL must be able to apply the convert transformation using the jpg() convenience
method</description>
          <long-description></long-description>
          <tag line="172" name="covers" description="\ImboClient\Url\Image::jpg" refers="\ImboClient\Url\Image::jpg"/>
          <tag line="172" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="199" package="Test suite">
        <name>testCanApplyTheConvertTransformationUsingThePngConvenienceMethod</name>
        <full_name>testCanApplyTheConvertTransformationUsingThePngConvenienceMethod</full_name>
        <docblock line="192">
          <description>The image URL must be able to apply the convert transformation using the png() convenience
method</description>
          <long-description></long-description>
          <tag line="192" name="covers" description="\ImboClient\Url\Image::png" refers="\ImboClient\Url\Image::png"/>
          <tag line="192" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="219" package="Test suite">
        <name>testCanApplyTheCropTransformationWithParameters</name>
        <full_name>testCanApplyTheCropTransformationWithParameters</full_name>
        <docblock line="212">
          <description>The image URL must be able to apply the crop transformation with parameters</description>
          <long-description></long-description>
          <tag line="212" name="covers" description="\ImboClient\Url\Image::crop" refers="\ImboClient\Url\Image::crop"/>
          <tag line="212" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="212" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="240" package="Test suite">
        <name>testCanApplyTheFliphorizontallyTransformation</name>
        <full_name>testCanApplyTheFliphorizontallyTransformation</full_name>
        <docblock line="233">
          <description>The image URL must be able to apply the flipHorizontally transformation</description>
          <long-description></long-description>
          <tag line="233" name="covers" description="\ImboClient\Url\Image::flipHorizontally" refers="\ImboClient\Url\Image::flipHorizontally"/>
          <tag line="233" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="233" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="252" package="Test suite">
        <name>testCanApplyTheFlipverticallyTransformation</name>
        <full_name>testCanApplyTheFlipverticallyTransformation</full_name>
        <docblock line="245">
          <description>The image URL must be able to apply the flipVertically transformation</description>
          <long-description></long-description>
          <tag line="245" name="covers" description="\ImboClient\Url\Image::flipVertically" refers="\ImboClient\Url\Image::flipVertically"/>
          <tag line="245" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="245" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="264" package="Test suite">
        <name>testCanApplyTheTransposeTransformation</name>
        <full_name>testCanApplyTheTransposeTransformation</full_name>
        <docblock line="257">
          <description>The image URL must be able to apply the transpose transformation</description>
          <long-description></long-description>
          <tag line="257" name="covers" description="\ImboClient\Url\Image::transpose" refers="\ImboClient\Url\Image::transpose"/>
          <tag line="257" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="257" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="276" package="Test suite">
        <name>testCanApplyTheTransverseTransformation</name>
        <full_name>testCanApplyTheTransverseTransformation</full_name>
        <docblock line="269">
          <description>The image URL must be able to apply the transverse transformation</description>
          <long-description></long-description>
          <tag line="269" name="covers" description="\ImboClient\Url\Image::transverse" refers="\ImboClient\Url\Image::transverse"/>
          <tag line="269" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="269" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="288" package="Test suite">
        <name>testCanApplyTheDesaturateTransformation</name>
        <full_name>testCanApplyTheDesaturateTransformation</full_name>
        <docblock line="281">
          <description>The image URL must be able to apply the desaturate transformation</description>
          <long-description></long-description>
          <tag line="281" name="covers" description="\ImboClient\Url\Image::desaturate" refers="\ImboClient\Url\Image::desaturate"/>
          <tag line="281" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="281" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="300" package="Test suite">
        <name>testCanApplyTheSepiaTransformationUsingDefaultParameters</name>
        <full_name>testCanApplyTheSepiaTransformationUsingDefaultParameters</full_name>
        <docblock line="293">
          <description>The image URL must be able to apply the sepia transformation with no custom parameters</description>
          <long-description></long-description>
          <tag line="293" name="covers" description="\ImboClient\Url\Image::sepia" refers="\ImboClient\Url\Image::sepia"/>
          <tag line="293" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="293" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="312" package="Test suite">
        <name>testCanApplyTheSepiaTransformationUsingCustomParameters</name>
        <full_name>testCanApplyTheSepiaTransformationUsingCustomParameters</full_name>
        <docblock line="305">
          <description>The image URL must be able to apply the sepia transformation with custom parameters</description>
          <long-description></long-description>
          <tag line="305" name="covers" description="\ImboClient\Url\Image::sepia" refers="\ImboClient\Url\Image::sepia"/>
          <tag line="305" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="305" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="324" package="Test suite">
        <name>testCanApplyTheResizeTransformationUsingOnlyWidth</name>
        <full_name>testCanApplyTheResizeTransformationUsingOnlyWidth</full_name>
        <docblock line="317">
          <description>The image URL must be able to apply the resize transformation using only width</description>
          <long-description></long-description>
          <tag line="317" name="covers" description="\ImboClient\Url\Image::resize" refers="\ImboClient\Url\Image::resize"/>
          <tag line="317" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="317" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="336" package="Test suite">
        <name>testCanApplyTheResizeTransformationUsingOnlyHeight</name>
        <full_name>testCanApplyTheResizeTransformationUsingOnlyHeight</full_name>
        <docblock line="329">
          <description>The image URL must be able to apply the resize transformation using only height</description>
          <long-description></long-description>
          <tag line="329" name="covers" description="\ImboClient\Url\Image::resize" refers="\ImboClient\Url\Image::resize"/>
          <tag line="329" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="329" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="348" package="Test suite">
        <name>testCanApplyTheResizeTransformationUsingBothWidthAndHeight</name>
        <full_name>testCanApplyTheResizeTransformationUsingBothWidthAndHeight</full_name>
        <docblock line="341">
          <description>The image URL must be able to apply the resize transformation using both width and height</description>
          <long-description></long-description>
          <tag line="341" name="covers" description="\ImboClient\Url\Image::resize" refers="\ImboClient\Url\Image::resize"/>
          <tag line="341" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="341" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="360" package="Test suite">
        <name>testCanApplyTheMaxsizeTransformationUsingOnlyWidth</name>
        <full_name>testCanApplyTheMaxsizeTransformationUsingOnlyWidth</full_name>
        <docblock line="353">
          <description>The image URL must be able to apply the maxSize transformation using only width</description>
          <long-description></long-description>
          <tag line="353" name="covers" description="\ImboClient\Url\Image::maxSize" refers="\ImboClient\Url\Image::maxSize"/>
          <tag line="353" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="353" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="372" package="Test suite">
        <name>testCanApplyTheMaxsizeTransformationUsingOnlyHeight</name>
        <full_name>testCanApplyTheMaxsizeTransformationUsingOnlyHeight</full_name>
        <docblock line="365">
          <description>The image URL must be able to apply the maxSize transformation using only height</description>
          <long-description></long-description>
          <tag line="365" name="covers" description="\ImboClient\Url\Image::maxSize" refers="\ImboClient\Url\Image::maxSize"/>
          <tag line="365" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="365" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="384" package="Test suite">
        <name>testCanApplyTheMaxsizeTransformationUsingBothWidthAndHeight</name>
        <full_name>testCanApplyTheMaxsizeTransformationUsingBothWidthAndHeight</full_name>
        <docblock line="377">
          <description>The image URL must be able to apply the maxSize transformation using both width and height</description>
          <long-description></long-description>
          <tag line="377" name="covers" description="\ImboClient\Url\Image::maxSize" refers="\ImboClient\Url\Image::maxSize"/>
          <tag line="377" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="377" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="396" package="Test suite">
        <name>testCanApplyTheRotateTransformationUsingOnlyAngle</name>
        <full_name>testCanApplyTheRotateTransformationUsingOnlyAngle</full_name>
        <docblock line="389">
          <description>The image URL must be able to apply the rotate transformation using only angle</description>
          <long-description></long-description>
          <tag line="389" name="covers" description="\ImboClient\Url\Image::rotate" refers="\ImboClient\Url\Image::rotate"/>
          <tag line="389" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="389" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="408" package="Test suite">
        <name>testCanApplyTheRotateTransformationUsingAngleAndBackground</name>
        <full_name>testCanApplyTheRotateTransformationUsingAngleAndBackground</full_name>
        <docblock line="401">
          <description>The image URL must be able to apply the rotate transformation using angle and bg</description>
          <long-description></long-description>
          <tag line="401" name="covers" description="\ImboClient\Url\Image::rotate" refers="\ImboClient\Url\Image::rotate"/>
          <tag line="401" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="401" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="420" package="Test suite">
        <name>testCanApplyTheThumbnailTransformationUsingDefaultParameters</name>
        <full_name>testCanApplyTheThumbnailTransformationUsingDefaultParameters</full_name>
        <docblock line="413">
          <description>The image URL must be able to apply the thumbnail transformation using the default parameters</description>
          <long-description></long-description>
          <tag line="413" name="covers" description="\ImboClient\Url\Image::thumbnail" refers="\ImboClient\Url\Image::thumbnail"/>
          <tag line="413" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="413" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="435" package="Test suite">
        <name>testCanApplyTheThumbnailTransformationUsingCustomParameters</name>
        <full_name>testCanApplyTheThumbnailTransformationUsingCustomParameters</full_name>
        <docblock line="428">
          <description>The image URL must be able to apply the thumbnail transformation using custom parameters</description>
          <long-description></long-description>
          <tag line="428" name="covers" description="\ImboClient\Url\Image::thumbnail" refers="\ImboClient\Url\Image::thumbnail"/>
          <tag line="428" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="428" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="450" package="Test suite">
        <name>testCanApplyTheCanvasTransformationUsingOnlyRequiredParameters</name>
        <full_name>testCanApplyTheCanvasTransformationUsingOnlyRequiredParameters</full_name>
        <docblock line="443">
          <description>The image URL must be able to apply the canvas transformation using only required parameters</description>
          <long-description></long-description>
          <tag line="443" name="covers" description="\ImboClient\Url\Image::canvas" refers="\ImboClient\Url\Image::canvas"/>
          <tag line="443" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="443" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="465" package="Test suite">
        <name>testCanApplyTheCanvasTransformationUsingAllParameters</name>
        <full_name>testCanApplyTheCanvasTransformationUsingAllParameters</full_name>
        <docblock line="458">
          <description>The image URL must be able to apply the canvas transformation using all parameters</description>
          <long-description></long-description>
          <tag line="458" name="covers" description="\ImboClient\Url\Image::canvas" refers="\ImboClient\Url\Image::canvas"/>
          <tag line="458" name="covers" description="\ImboClient\Url\Url::addQueryParam" refers="\ImboClient\Url\Url::addQueryParam"/>
          <tag line="458" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="478" package="Test suite">
        <name>getUrlData</name>
        <full_name>getUrlData</full_name>
        <docblock line="473">
          <description>Data provider for testGetUrl()</description>
          <long-description></long-description>
          <tag line="473" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="491" package="Test suite">
        <name>testCanGenerateACompleteUrlIncludingAnAccessToken</name>
        <full_name>testCanGenerateACompleteUrlIncludingAnAccessToken</full_name>
        <docblock line="484">
          <description>The image URL must be able to generate a complete URL with an access token appended</description>
          <long-description></long-description>
          <tag line="484" name="dataProvider" description="getUrlData"/>
          <tag line="484" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="484" name="covers" description="\ImboClient\Url\Image::getResourceUrl" refers="\ImboClient\Url\Image::getResourceUrl"/>
        </docblock>
        <argument line="491">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="491">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="491">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="491">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="504" package="Test suite">
        <name>testCanResetAllAppliedTransformations</name>
        <full_name>testCanResetAllAppliedTransformations</full_name>
        <docblock line="497">
          <description>The image URL must be able to reset all applied transformations</description>
          <long-description></long-description>
          <tag line="497" name="covers" description="\ImboClient\Url\Image::reset" refers="\ImboClient\Url\Image::reset"/>
          <tag line="497" name="covers" description="\ImboClient\Url\Image::gif" refers="\ImboClient\Url\Image::gif"/>
          <tag line="497" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="548" package="Test suite">
        <name>testCanChainAllTransformations</name>
        <full_name>testCanChainAllTransformations</full_name>
        <docblock line="529">
          <description>The image URL must be able to chain all available transformations</description>
          <long-description></long-description>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::border" refers="\ImboClient\Url\Image::border"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::compress" refers="\ImboClient\Url\Image::compress"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::convert" refers="\ImboClient\Url\Image::convert"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::crop" refers="\ImboClient\Url\Image::crop"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::flipHorizontally" refers="\ImboClient\Url\Image::flipHorizontally"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::flipVertically" refers="\ImboClient\Url\Image::flipVertically"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::resize" refers="\ImboClient\Url\Image::resize"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::maxSize" refers="\ImboClient\Url\Image::maxSize"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::rotate" refers="\ImboClient\Url\Image::rotate"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::thumbnail" refers="\ImboClient\Url\Image::thumbnail"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::canvas" refers="\ImboClient\Url\Image::canvas"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::transpose" refers="\ImboClient\Url\Image::transpose"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::transverse" refers="\ImboClient\Url\Image::transverse"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::desaturate" refers="\ImboClient\Url\Image::desaturate"/>
          <tag line="529" name="covers" description="\ImboClient\Url\Image::sepia" refers="\ImboClient\Url\Image::sepia"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\ImageTest</critical>
      <critical line="18" code="50019">No short description for property $url</critical>
      <critical line="23" code="50019">No short description for property $baseUrl</critical>
      <critical line="28" code="50019">No short description for property $publicKey</critical>
      <critical line="33" code="50019">No short description for property $privateKey</critical>
      <critical line="38" code="50019">No short description for property $imageIdentifier</critical>
      <error line="131" code="50015">Argument $extension is missing from the Docblock of testCanApplyTheConvertTransformationUsingACustomExtension()</error>
      <error line="484" code="50015">Argument $host is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="484" code="50015">Argument $publicKey is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="484" code="50015">Argument $imageIdentifier is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="484" code="50015">Argument $expected is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/StatusTest.php" hash="46e173109b9d47ad9d67eeca5b4580f1" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>StatusTest</name>
      <full_name>\ImboClient\Url\StatusTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="23" package="Test suite">
        <name>getUrlData</name>
        <full_name>getUrlData</full_name>
        <docblock line="18">
          <description>Fetch URL data</description>
          <long-description></long-description>
          <tag line="18" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="39" package="Test suite">
        <name>testCanGenerateACompleteUrlThatDoesNotIncludeAnAccessToken</name>
        <full_name>testCanGenerateACompleteUrlThatDoesNotIncludeAnAccessToken</full_name>
        <docblock line="31">
          <description>The status URL must be able to correctly generate a complete URL with no access token</description>
          <long-description></long-description>
          <tag line="31" name="dataProvider" description="getUrlData"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Url::__construct" refers="\ImboClient\Url\Url::__construct"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Status::getResourceUrl" refers="\ImboClient\Url\Status::getResourceUrl"/>
        </docblock>
        <argument line="39">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\StatusTest</critical>
      <error line="31" code="50015">Argument $host is missing from the Docblock of testCanGenerateACompleteUrlThatDoesNotIncludeAnAccessToken()</error>
      <error line="31" code="50015">Argument $expected is missing from the Docblock of testCanGenerateACompleteUrlThatDoesNotIncludeAnAccessToken()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Url/ImagesTest.php" hash="01be7748e580963e0053e696a928ab4f" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ImagesTest</name>
      <full_name>\ImboClient\Url\ImagesTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="23" package="Test suite">
        <name>getUrlData</name>
        <full_name>getUrlData</full_name>
        <docblock line="18">
          <description>Fetch URL data</description>
          <long-description></long-description>
          <tag line="18" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="39" package="Test suite">
        <name>testCanGenerateACompleteUrlIncludingAnAccessToken</name>
        <full_name>testCanGenerateACompleteUrlIncludingAnAccessToken</full_name>
        <docblock line="31">
          <description>The images URL must be able to generate a complete URL with an access token appended</description>
          <long-description></long-description>
          <tag line="31" name="dataProvider" description="getUrlData"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Url::__construct" refers="\ImboClient\Url\Url::__construct"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Url::getUrl" refers="\ImboClient\Url\Url::getUrl"/>
          <tag line="31" name="covers" description="\ImboClient\Url\Images::getResourceUrl" refers="\ImboClient\Url\Images::getResourceUrl"/>
        </docblock>
        <argument line="39">
          <name>$host</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="39">
          <name>$expected</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Url\ImagesTest</critical>
      <error line="31" code="50015">Argument $host is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="31" code="50015">Argument $publicKey is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
      <error line="31" code="50015">Argument $expected is missing from the Docblock of testCanGenerateACompleteUrlIncludingAnAccessToken()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Driver/_files/driver.php" hash="ba552503dd3be36b445affc68b178e41" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
  </file>
  <file path="tests/ImboClient/Driver/cURLTest.php" hash="4a4aeaf19c51cf633837ffb11ea5d4b4" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Driver" line="21" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>cURLTest</name>
      <full_name>\ImboClient\Driver\cURLTest</full_name>
      <docblock line="17">
        <description></description>
        <long-description></long-description>
        <tag line="17" name="package" description="Test suite"/>
        <tag line="17" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="27" namespace="ImboClient\Driver" package="Default">
        <name>$driver</name>
        <default></default>
        <docblock line="22">
          <description>The driver instance</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="\ImboClient\Driver\cURL">
            <type by_reference="false">\ImboClient\Driver\cURL</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="ImboClient\Driver" package="Default">
        <name>$wrapper</name>
        <default></default>
        <docblock line="29">
          <description></description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="\ImboClient\Driver\cURL\Wrapper">
            <type by_reference="false">\ImboClient\Driver\cURL\Wrapper</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="ImboClient\Driver" package="Default">
        <name>$testUrl</name>
        <default></default>
        <docblock line="34">
          <description>URL to the script that the tests should send requests to</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="46" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="41">
          <description>Setup the driver</description>
          <long-description></long-description>
          <tag line="41" name="covers" description="\ImboClient\Driver\cURL::__construct" refers="\ImboClient\Driver\cURL::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="61" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="56">
          <description>Tear down the driver</description>
          <long-description></long-description>
          <tag line="56" name="covers" description="\ImboClient\Driver\cURL::__destruct" refers="\ImboClient\Driver\cURL::__destruct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="72" package="Test suite">
        <name>testCanPostDataUsingHttpPost</name>
        <full_name>testCanPostDataUsingHttpPost</full_name>
        <docblock line="66">
          <description>The driver must be able to POST data</description>
          <long-description></long-description>
          <tag line="66" name="covers" description="\ImboClient\Driver\cURL::post" refers="\ImboClient\Driver\cURL::post"/>
          <tag line="66" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="90" package="Test suite">
        <name>testCanPutAFileUsingHttpPut</name>
        <full_name>testCanPutAFileUsingHttpPut</full_name>
        <docblock line="84">
          <description>The driver must be able to put a file using HTTP PUT</description>
          <long-description></long-description>
          <tag line="84" name="covers" description="\ImboClient\Driver\cURL::put" refers="\ImboClient\Driver\cURL::put"/>
          <tag line="84" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="103" package="Test suite">
        <name>testCanPutDataUsingHttpPut</name>
        <full_name>testCanPutDataUsingHttpPut</full_name>
        <docblock line="97">
          <description>The driver must be able to put data using HTTP PUT</description>
          <long-description></long-description>
          <tag line="97" name="covers" description="\ImboClient\Driver\cURL::putData" refers="\ImboClient\Driver\cURL::putData"/>
          <tag line="97" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="118" package="Test suite">
        <name>testCanRequestAnUrlWithQueryParametersUsingHttpGet</name>
        <full_name>testCanRequestAnUrlWithQueryParametersUsingHttpGet</full_name>
        <docblock line="112">
          <description>The driver must be able to request a URL using HTTP GET</description>
          <long-description></long-description>
          <tag line="112" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="112" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="133" package="Test suite">
        <name>testCanRequestAnUrlUsingHttpHead</name>
        <full_name>testCanRequestAnUrlUsingHttpHead</full_name>
        <docblock line="127">
          <description>The driver must be able to request a URL using HTTP HEAD</description>
          <long-description></long-description>
          <tag line="127" name="covers" description="\ImboClient\Driver\cURL::head" refers="\ImboClient\Driver\cURL::head"/>
          <tag line="127" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="145" package="Test suite">
        <name>testCanRequestAnUrlUsingHttpDelete</name>
        <full_name>testCanRequestAnUrlUsingHttpDelete</full_name>
        <docblock line="139">
          <description>The driver must be able to request a URL using HTTP DELETE</description>
          <long-description></long-description>
          <tag line="139" name="covers" description="\ImboClient\Driver\cURL::delete" refers="\ImboClient\Driver\cURL::delete"/>
          <tag line="139" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="160" package="Test suite">
        <name>testTimesOutWhenTheServerTakesTooLongToRespond</name>
        <full_name>testTimesOutWhenTheServerTakesTooLongToRespond</full_name>
        <docblock line="152">
          <description>The driver must time out if the server uses more time than what the driver accepts</description>
          <long-description></long-description>
          <tag line="152" name="expectedException" description="ImboClient\Exception\RuntimeException"/>
          <tag line="152" name="expectedExceptionMessage" description="An error occured. Request timed out during transfer (limit: 2s)."/>
          <tag line="152" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="152" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="175" package="Test suite">
        <name>testAcceptsCustomParametersThroughConstructor</name>
        <full_name>testAcceptsCustomParametersThroughConstructor</full_name>
        <docblock line="165">
          <description>The driver must be able to accept custom parameters through the constructor that will
override the default values</description>
          <long-description></long-description>
          <tag line="165" name="expectedException" description="ImboClient\Exception\RuntimeException"/>
          <tag line="165" name="expectedExceptionMessage" description="An error occured. Request timed out during transfer (limit: 1s)."/>
          <tag line="165" name="covers" description="\ImboClient\Driver\cURL::__construct" refers="\ImboClient\Driver\cURL::__construct"/>
          <tag line="165" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="165" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="191" package="Test suite">
        <name>testDoesNotIncludeExpectHeaderPrDefault</name>
        <full_name>testDoesNotIncludeExpectHeaderPrDefault</full_name>
        <docblock line="184">
          <description>The driver must not include the Expect request header pr default</description>
          <long-description></long-description>
          <tag line="184" name="covers" description="\ImboClient\Driver\cURL::post" refers="\ImboClient\Driver\cURL::post"/>
          <tag line="184" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
          <tag line="184" name="covers" description="\ImboClient\Driver\cURL::setRequestHeader" refers="\ImboClient\Driver\cURL::setRequestHeader"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="213" package="Test suite">
        <name>testCanSetAnAdditionalRequestHeader</name>
        <full_name>testCanSetAnAdditionalRequestHeader</full_name>
        <docblock line="208">
          <description>The driver must support setting an additional request header</description>
          <long-description></long-description>
          <tag line="208" name="covers" description="\ImboClient\Driver\cURL::setRequestHeader" refers="\ImboClient\Driver\cURL::setRequestHeader"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="229" package="Test suite">
        <name>testCanSetMultipleAdditionalRequestHeaders</name>
        <full_name>testCanSetMultipleAdditionalRequestHeaders</full_name>
        <docblock line="223">
          <description>The driver must support setting multiple additional request header</description>
          <long-description></long-description>
          <tag line="223" name="covers" description="\ImboClient\Driver\cURL::setRequestHeader" refers="\ImboClient\Driver\cURL::setRequestHeader"/>
          <tag line="223" name="covers" description="\ImboClient\Driver\cURL::setRequestHeaders" refers="\ImboClient\Driver\cURL::setRequestHeaders"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="251" package="Test suite">
        <name>testFollowsRedirects</name>
        <full_name>testFollowsRedirects</full_name>
        <docblock line="245">
          <description>The driver must follow redirects</description>
          <long-description></long-description>
          <tag line="245" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="245" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="269" package="Test suite">
        <name>testThrowsExceptionWhenTheServerRespondsWithAClientErrorAndMakesTheResponseAvailableThroughTheException</name>
        <full_name>testThrowsExceptionWhenTheServerRespondsWithAClientErrorAndMakesTheResponseAvailableThroughTheException</full_name>
        <docblock line="258">
          <description>The driver must throw an exception when the server responds with an error as well as make
the response available through the exception</description>
          <long-description></long-description>
          <tag line="258" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="258" name="expectedExceptionMessage" description="Bad Request"/>
          <tag line="258" name="expectedExceptionCode" description="400"/>
          <tag line="258" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="258" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
          <tag line="258" name="covers" description="\ImboClient\Exception\ServerException::getResponse" refers="\ImboClient\Exception\ServerException::getResponse"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="292" package="Test suite">
        <name>testThrowsExceptionWhenTheServerRespondsWithAServerErrorAndMakesTheResponseAvailableThroughTheException</name>
        <full_name>testThrowsExceptionWhenTheServerRespondsWithAServerErrorAndMakesTheResponseAvailableThroughTheException</full_name>
        <docblock line="281">
          <description>The driver must throw an exception when the server responds with an error as well as make
the response available through the exception</description>
          <long-description></long-description>
          <tag line="281" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="281" name="expectedExceptionMessage" description="Internal Server Error"/>
          <tag line="281" name="expectedExceptionCode" description="500"/>
          <tag line="281" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="281" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
          <tag line="281" name="covers" description="\ImboClient\Exception\ServerException::getResponse" refers="\ImboClient\Exception\ServerException::getResponse"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="311" package="Test suite">
        <name>testDoesNotSendDuplicateRequestHeaders</name>
        <full_name>testDoesNotSendDuplicateRequestHeaders</full_name>
        <docblock line="304">
          <description>The driver must not include duplicate request headers</description>
          <long-description></long-description>
          <tag line="304" name="link" description="https://github.com/imbo/imboclient-php/issues/52" link="https://github.com/imbo/imboclient-php/issues/52"/>
          <tag line="304" name="covers" description="\ImboClient\Driver\cURL::setRequestHeader" refers="\ImboClient\Driver\cURL::setRequestHeader"/>
          <tag line="304" name="covers" description="\ImboClient\Driver\cURL::setRequestHeaders" refers="\ImboClient\Driver\cURL::setRequestHeaders"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="337" package="Test suite">
        <name>testAcceptsCustomCurlParametersThroughConstructor</name>
        <full_name>testAcceptsCustomCurlParametersThroughConstructor</full_name>
        <docblock line="332">
          <description>The driver must merge custom cURL options with the default ones provided to the constructor</description>
          <long-description></long-description>
          <tag line="332" name="covers" description="\ImboClient\Driver\cURL::__construct" refers="\ImboClient\Driver\cURL::__construct"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="358" package="Test suite">
        <name>testSetsADefaultErrorMessageWhenTheServerRespondsWithAnErrorAndAnEmptyResponseBody</name>
        <full_name>testSetsADefaultErrorMessageWhenTheServerRespondsWithAnErrorAndAnEmptyResponseBody</full_name>
        <docblock line="348">
          <description>The driver must set a default error message when the server responds with an error and an
empty body (typically a response to a HEAD request)</description>
          <long-description></long-description>
          <tag line="348" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="348" name="expectedExceptionMessage" description="Empty body"/>
          <tag line="348" name="expectedExceptionCode" description="500"/>
          <tag line="348" name="covers" description="\ImboClient\Driver\cURL::get" refers="\ImboClient\Driver\cURL::get"/>
          <tag line="348" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="370" package="Test suite">
        <name>testDoesNotSetEmptySslOptions</name>
        <full_name>testDoesNotSetEmptySslOptions</full_name>
        <docblock line="364">
          <description>Make sure that the driver does not set some of the SSL options if they don't have any values</description>
          <long-description></long-description>
          <tag line="364" name="see" description="\ImboClient\Driver\https://github.com/imbo/imboclient-php/issues/68" refers="\ImboClient\Driver\https://github.com/imbo/imboclient-php/issues/68"/>
          <tag line="364" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="400" package="Test suite">
        <name>testSetSsslOptionsWhenAValueHasBeenSpecified</name>
        <full_name>testSetSsslOptionsWhenAValueHasBeenSpecified</full_name>
        <docblock line="395">
          <description>Make sure that the driver sets all SSL options when they have been given values</description>
          <long-description></long-description>
          <tag line="395" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="439" package="Test suite">
        <name>testThrowsExceptionWhenConnectTimeoutIsHigherThanAllowed</name>
        <full_name>testThrowsExceptionWhenConnectTimeoutIsHigherThanAllowed</full_name>
        <docblock line="432">
          <description>Make sure that the driver throws an exception if the connect timeout limit has been exceeded</description>
          <long-description></long-description>
          <tag line="432" name="expectedException" description="ImboClient\Exception\RuntimeException"/>
          <tag line="432" name="expectedExceptionMessage" description="An error occured. Request timed out while connecting (limit: 20s)."/>
          <tag line="432" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="466" package="Test suite">
        <name>testThrowsExceptionWhenUndefinedErrorOccurs</name>
        <full_name>testThrowsExceptionWhenUndefinedErrorOccurs</full_name>
        <docblock line="459">
          <description>Make sure that the driver throws an exception if an unknown error occurs</description>
          <long-description></long-description>
          <tag line="459" name="expectedException" description="ImboClient\Exception\RuntimeException"/>
          <tag line="459" name="expectedExceptionMessage" description="An error occured. Could not complete request (Response code: 500)."/>
          <tag line="459" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="492" package="Test suite">
        <name>testGracefullyHandlesNonJsonResponseBodies</name>
        <full_name>testGracefullyHandlesNonJsonResponseBodies</full_name>
        <docblock line="484">
          <description>Make sure that the driver handles incorrectly serialized data in the response</description>
          <long-description></long-description>
          <tag line="484" name="expectedException" description="ImboClient\Exception\ServerException"/>
          <tag line="484" name="expectedExceptionMessage" description="Invalid response body. Expected JSON serialized data"/>
          <tag line="484" name="expectedExceptionCode" description="404"/>
          <tag line="484" name="covers" description="\ImboClient\Driver\cURL::request" refers="\ImboClient\Driver\cURL::request"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="17" code="50005">No short description for class \ImboClient\Driver\cURLTest</critical>
      <critical line="29" code="50019">No short description for property $wrapper</critical>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Exception/ServerExceptionTest.php" hash="8b40556de24297ecb5642ba2f6db71a4" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Exception" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ServerExceptionTest</name>
      <full_name>\ImboClient\Exception\ServerExceptionTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Exception" package="Default">
        <name>$exception</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="26" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="23">
          <description>Set up the exception instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="33" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the exception instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="43" package="Test suite">
        <name>testCanSetAndGetAResponseInstance</name>
        <full_name>testCanSetAndGetAResponseInstance</full_name>
        <docblock line="37">
          <description>The server exception must be able to set and get a response instance</description>
          <long-description></long-description>
          <tag line="37" name="covers" description="\ImboClient\Exception\ServerException::setResponse" refers="\ImboClient\Exception\ServerException::setResponse"/>
          <tag line="37" name="covers" description="\ImboClient\Exception\ServerException::getResponse" refers="\ImboClient\Exception\ServerException::getResponse"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="55" package="Test suite">
        <name>testHasInitiallyNoResponseInstance</name>
        <full_name>testHasInitiallyNoResponseInstance</full_name>
        <docblock line="50">
          <description>Initially the server exception instance does not have a response instance</description>
          <long-description></long-description>
          <tag line="50" name="covers" description="\ImboClient\Exception\ServerException::getResponse" refers="\ImboClient\Exception\ServerException::getResponse"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Exception\ServerExceptionTest</critical>
      <critical line="18" code="50019">No short description for property $exception</critical>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Http/HeaderContainerTest.php" hash="8300544c122b078c82482fbcfd8119d4" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Http" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>HeaderContainerTest</name>
      <full_name>\ImboClient\Http\HeaderContainerTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Http" package="Default">
        <name>$container</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Http\HeaderContainer">
            <type by_reference="false">\ImboClient\Http\HeaderContainer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="26" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="23">
          <description>Set up the header container instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="33" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the header container instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="42" package="Test suite">
        <name>getKeysAndValues</name>
        <full_name>getKeysAndValues</full_name>
        <docblock line="37">
          <description>Return different keys and values</description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="59" package="Test suite">
        <name>testCanSetAndGetValues</name>
        <full_name>testCanSetAndGetValues</full_name>
        <docblock line="51">
          <description>The container must be able to set and get parameters as well as normalize the key names</description>
          <long-description></long-description>
          <tag line="51" name="dataProvider" description="getKeysAndValues"/>
          <tag line="51" name="covers" description="\ImboClient\Http\HeaderContainer::set" refers="\ImboClient\Http\HeaderContainer::set"/>
          <tag line="51" name="covers" description="\ImboClient\Http\HeaderContainer::get" refers="\ImboClient\Http\HeaderContainer::get"/>
          <tag line="51" name="covers" description="\ImboClient\Http\HeaderContainer::getName" refers="\ImboClient\Http\HeaderContainer::getName"/>
        </docblock>
        <argument line="59">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$internalKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="73" package="Test suite">
        <name>testCanCheckForExistingKeys</name>
        <full_name>testCanCheckForExistingKeys</full_name>
        <docblock line="65">
          <description>The container must be able to check for existing keys</description>
          <long-description></long-description>
          <tag line="65" name="dataProvider" description="getKeysAndValues"/>
          <tag line="65" name="covers" description="\ImboClient\Http\HeaderContainer::set" refers="\ImboClient\Http\HeaderContainer::set"/>
          <tag line="65" name="covers" description="\ImboClient\Http\HeaderContainer::has" refers="\ImboClient\Http\HeaderContainer::has"/>
          <tag line="65" name="covers" description="\ImboClient\Http\HeaderContainer::getName" refers="\ImboClient\Http\HeaderContainer::getName"/>
        </docblock>
        <argument line="73">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$internalKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="90" package="Test suite">
        <name>testCanRemoveKeys</name>
        <full_name>testCanRemoveKeys</full_name>
        <docblock line="81">
          <description>The container must be able to remove keys</description>
          <long-description></long-description>
          <tag line="81" name="dataProvider" description="getKeysAndValues"/>
          <tag line="81" name="covers" description="\ImboClient\Http\HeaderContainer::set" refers="\ImboClient\Http\HeaderContainer::set"/>
          <tag line="81" name="covers" description="\ImboClient\Http\HeaderContainer::has" refers="\ImboClient\Http\HeaderContainer::has"/>
          <tag line="81" name="covers" description="\ImboClient\Http\HeaderContainer::remove" refers="\ImboClient\Http\HeaderContainer::remove"/>
          <tag line="81" name="covers" description="\ImboClient\Http\HeaderContainer::getName" refers="\ImboClient\Http\HeaderContainer::getName"/>
        </docblock>
        <argument line="90">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$internalKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="106" package="Test suite">
        <name>testCanReturnAllKeys</name>
        <full_name>testCanReturnAllKeys</full_name>
        <docblock line="99">
          <description>The container must be able to return all keys</description>
          <long-description></long-description>
          <tag line="99" name="covers" description="\ImboClient\Http\HeaderContainer::__construct" refers="\ImboClient\Http\HeaderContainer::__construct"/>
          <tag line="99" name="covers" description="\ImboClient\Http\HeaderContainer::getAll" refers="\ImboClient\Http\HeaderContainer::getAll"/>
          <tag line="99" name="covers" description="\ImboClient\Http\HeaderContainer::getName" refers="\ImboClient\Http\HeaderContainer::getName"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Http\HeaderContainerTest</critical>
      <critical line="18" code="50019">No short description for property $container</critical>
      <error line="51" code="50015">Argument $key is missing from the Docblock of testCanSetAndGetValues()</error>
      <error line="51" code="50015">Argument $internalKey is missing from the Docblock of testCanSetAndGetValues()</error>
      <error line="51" code="50015">Argument $value is missing from the Docblock of testCanSetAndGetValues()</error>
      <error line="65" code="50015">Argument $key is missing from the Docblock of testCanCheckForExistingKeys()</error>
      <error line="65" code="50015">Argument $internalKey is missing from the Docblock of testCanCheckForExistingKeys()</error>
      <error line="65" code="50015">Argument $value is missing from the Docblock of testCanCheckForExistingKeys()</error>
      <error line="81" code="50015">Argument $key is missing from the Docblock of testCanRemoveKeys()</error>
      <error line="81" code="50015">Argument $internalKey is missing from the Docblock of testCanRemoveKeys()</error>
      <error line="81" code="50015">Argument $value is missing from the Docblock of testCanRemoveKeys()</error>
    </parse_markers>
  </file>
  <file path="tests/ImboClient/Http/Response/ResponseTest.php" hash="87f624553e48f843a33d9ec22a516401" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Http\Response" line="17" package="Test suite">
      <extends>\PHPUnit_Framework_TestCase</extends>
      <name>ResponseTest</name>
      <full_name>\ImboClient\Http\Response\ResponseTest</full_name>
      <docblock line="13">
        <description></description>
        <long-description></long-description>
        <tag line="13" name="package" description="Test suite"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="ImboClient\Http\Response" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="18">
          <description></description>
          <long-description></long-description>
          <tag line="18" name="var" description="" type="\ImboClient\Http\Response\ImboClient\Http\Response\Response">
            <type by_reference="false">\ImboClient\Http\Response\ImboClient\Http\Response\Response</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="26" package="Test suite">
        <name>setUp</name>
        <full_name>setUp</full_name>
        <docblock line="23">
          <description>Set up the response instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="33" package="Test suite">
        <name>tearDown</name>
        <full_name>tearDown</full_name>
        <docblock line="30">
          <description>Tear down the response instance</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="43" package="Test suite">
        <name>testCanSetAndGetAHeaderContainer</name>
        <full_name>testCanSetAndGetAHeaderContainer</full_name>
        <docblock line="37">
          <description>The response class must be able to set and get a header container</description>
          <long-description></long-description>
          <tag line="37" name="covers" description="\ImboClient\Http\Response\Response::setHeaders" refers="\ImboClient\Http\Response\Response::setHeaders"/>
          <tag line="37" name="covers" description="\ImboClient\Http\Response\Response::getHeaders" refers="\ImboClient\Http\Response\Response::getHeaders"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="56" package="Test suite">
        <name>testCanSetAndGetABody</name>
        <full_name>testCanSetAndGetABody</full_name>
        <docblock line="50">
          <description>The response class must be able to set and get a body</description>
          <long-description></long-description>
          <tag line="50" name="covers" description="\ImboClient\Http\Response\Response::setBody" refers="\ImboClient\Http\Response\Response::setBody"/>
          <tag line="50" name="covers" description="\ImboClient\Http\Response\Response::getBody" refers="\ImboClient\Http\Response\Response::getBody"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="69" package="Test suite">
        <name>testCanSetAndGetAStatusCode</name>
        <full_name>testCanSetAndGetAStatusCode</full_name>
        <docblock line="63">
          <description>The response class must be able to set and get a status code</description>
          <long-description></long-description>
          <tag line="63" name="covers" description="\ImboClient\Http\Response\Response::setStatusCode" refers="\ImboClient\Http\Response\Response::setStatusCode"/>
          <tag line="63" name="covers" description="\ImboClient\Http\Response\Response::getStatusCode" refers="\ImboClient\Http\Response\Response::getStatusCode"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="81" package="Test suite">
        <name>getCodesForIsSuccess</name>
        <full_name>getCodesForIsSuccess</full_name>
        <docblock line="76">
          <description>Get different HTTP status codes and the value for "success"</description>
          <long-description></long-description>
          <tag line="76" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="98" package="Test suite">
        <name>testCanTellWhetherOrNotTheResponseIsASuccessBasedOnAnHttpStatusCode</name>
        <full_name>testCanTellWhetherOrNotTheResponseIsASuccessBasedOnAnHttpStatusCode</full_name>
        <docblock line="90">
          <description>The response must tell whether the response is a "success" or not based on an HTTP status
code</description>
          <long-description></long-description>
          <tag line="90" name="dataProvider" description="getCodesForIsSuccess"/>
          <tag line="90" name="covers" description="\ImboClient\Http\Response\Response::isSuccess" refers="\ImboClient\Http\Response\Response::isSuccess"/>
          <tag line="90" name="covers" description="\ImboClient\Http\Response\Response::getStatusCode" refers="\ImboClient\Http\Response\Response::getStatusCode"/>
        </docblock>
        <argument line="98">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$success</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="108" package="Test suite">
        <name>getCodesForIsError</name>
        <full_name>getCodesForIsError</full_name>
        <docblock line="103">
          <description>Get different HTTP status codes and the value for "error"</description>
          <long-description></long-description>
          <tag line="103" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="125" package="Test suite">
        <name>testCanTellWhetherOrNotTheResponseIsAnErrorBasedOnAnHttpStatusCode</name>
        <full_name>testCanTellWhetherOrNotTheResponseIsAnErrorBasedOnAnHttpStatusCode</full_name>
        <docblock line="117">
          <description>The response must tell whether the response is an "error" or not based on an HTTP status
code</description>
          <long-description></long-description>
          <tag line="117" name="dataProvider" description="getCodesForIsError"/>
          <tag line="117" name="covers" description="\ImboClient\Http\Response\Response::isError" refers="\ImboClient\Http\Response\Response::isError"/>
          <tag line="117" name="covers" description="\ImboClient\Http\Response\Response::getStatusCode" refers="\ImboClient\Http\Response\Response::getStatusCode"/>
        </docblock>
        <argument line="125">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
        <argument line="125">
          <name>$error</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="136" package="Test suite">
        <name>testReturnsTheBodyWhenUsedInAStringContext</name>
        <full_name>testReturnsTheBodyWhenUsedInAStringContext</full_name>
        <docblock line="130">
          <description>The response must return the body in a string context</description>
          <long-description></long-description>
          <tag line="130" name="covers" description="\ImboClient\Http\Response\Response::__toString" refers="\ImboClient\Http\Response\Response::__toString"/>
          <tag line="130" name="covers" description="\ImboClient\Http\Response\Response::getBody" refers="\ImboClient\Http\Response\Response::getBody"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="149" package="Test suite">
        <name>testCanFetchAnImageIdentifierIfItExistsAsAHeader</name>
        <full_name>testCanFetchAnImageIdentifierIfItExistsAsAHeader</full_name>
        <docblock line="143">
          <description>The response must be able to return the image identifier if it exists in the header
collection</description>
          <long-description></long-description>
          <tag line="143" name="covers" description="\ImboClient\Http\Response\Response::getImageIdentifier" refers="\ImboClient\Http\Response\Response::getImageIdentifier"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="173" package="Test suite">
        <name>testCanReturnAJsonEncodedBodyAsAnArray</name>
        <full_name>testCanReturnAJsonEncodedBodyAsAnArray</full_name>
        <docblock line="168">
          <description>Can return the JSON encoded body as an array</description>
          <long-description></long-description>
          <tag line="168" name="covers" description="\ImboClient\Http\Response\Response::asArray" refers="\ImboClient\Http\Response\Response::asArray"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="187" package="Test suite">
        <name>testCanReturnAJsonEncodedBodyAsAnObject</name>
        <full_name>testCanReturnAJsonEncodedBodyAsAnObject</full_name>
        <docblock line="182">
          <description>Can return the JSON encoded body as an object</description>
          <long-description></long-description>
          <tag line="182" name="covers" description="\ImboClient\Http\Response\Response::asObject" refers="\ImboClient\Http\Response\Response::asObject"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="203" package="Test suite">
        <name>getBodyWithErrorCode</name>
        <full_name>getBodyWithErrorCode</full_name>
        <docblock line="198">
          <description>Return body data along with a resulting imbo error code for that body</description>
          <long-description></long-description>
          <tag line="198" name="return" description="" type="array[]">
            <type by_reference="false">array[]</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="221" package="Test suite">
        <name>testCanReturnAnImboErrorCodeWhenTheBodyHasAnErrorElement</name>
        <full_name>testCanReturnAnImboErrorCodeWhenTheBodyHasAnErrorElement</full_name>
        <docblock line="214">
          <description>The response must return the imbo error code only if the response body has a correct error
element</description>
          <long-description></long-description>
          <tag line="214" name="dataProvider" description="getBodyWithErrorCode"/>
          <tag line="214" name="covers" description="\ImboClient\Http\Response\Response::getImboErrorCode" refers="\ImboClient\Http\Response\Response::getImboErrorCode"/>
        </docblock>
        <argument line="221">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <critical line="13" code="50005">No short description for class \ImboClient\Http\Response\ResponseTest</critical>
      <critical line="18" code="50019">No short description for property $response</critical>
      <error line="90" code="50015">Argument $code is missing from the Docblock of testCanTellWhetherOrNotTheResponseIsASuccessBasedOnAnHttpStatusCode()</error>
      <error line="90" code="50015">Argument $success is missing from the Docblock of testCanTellWhetherOrNotTheResponseIsASuccessBasedOnAnHttpStatusCode()</error>
      <error line="117" code="50015">Argument $code is missing from the Docblock of testCanTellWhetherOrNotTheResponseIsAnErrorBasedOnAnHttpStatusCode()</error>
      <error line="117" code="50015">Argument $error is missing from the Docblock of testCanTellWhetherOrNotTheResponseIsAnErrorBasedOnAnHttpStatusCode()</error>
      <error line="214" code="50015">Argument $body is missing from the Docblock of testCanReturnAnImboErrorCodeWhenTheBodyHasAnErrorElement()</error>
      <error line="214" code="50015">Argument $code is missing from the Docblock of testCanReturnAnImboErrorCodeWhenTheBodyHasAnErrorElement()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Client.php" hash="89313492fb3c41e4975431a2505e985b" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient" line="31" package="Client">
      <extends/>
      <implements>\ImboClient\ClientInterface</implements>
      <name>Client</name>
      <full_name>\ImboClient\Client</full_name>
      <docblock line="23">
        <description>Client that interacts with Imbo servers</description>
        <long-description>&lt;p&gt;This client includes methods that can be used to easily interact with Imbo servers.&lt;/p&gt;</long-description>
        <tag line="23" name="package" description="Client"/>
        <tag line="23" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="37" namespace="ImboClient" package="Default">
        <name>$serverUrls</name>
        <default></default>
        <docblock line="32">
          <description>The server URLs</description>
          <long-description></long-description>
          <tag line="32" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="ImboClient" package="Default">
        <name>$driver</name>
        <default></default>
        <docblock line="39">
          <description>Driver used by the client</description>
          <long-description></long-description>
          <tag line="39" name="var" description="" type="\ImboClient\Driver\DriverInterface">
            <type by_reference="false">\ImboClient\Driver\DriverInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="51" namespace="ImboClient" package="Default">
        <name>$publicKey</name>
        <default></default>
        <docblock line="46">
          <description>Public key used for signed requests</description>
          <long-description></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="ImboClient" package="Default">
        <name>$privateKey</name>
        <default></default>
        <docblock line="53">
          <description>Private key used for signed requests</description>
          <long-description></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="69" package="Client">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="60">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag line="60" name="param" description="One or more URLs to the Imbo server, including protocol" type="array|string" variable="$serverUrls">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The public key to use" type="string" variable="$publicKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="The private key to use" type="string" variable="$privateKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="param" description="Optional driver to set" type="\ImboClient\Driver\DriverInterface" variable="$driver">
            <type by_reference="false">\ImboClient\Driver\DriverInterface</type>
          </tag>
          <tag line="60" name="param" description="A version instance" type="\ImboClient\Version" variable="$version">
            <type by_reference="false">\ImboClient\Version</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$serverUrls</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$privateKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$driver</name>
          <default>null</default>
          <type>\ImboClient\Driver\DriverInterface</type>
        </argument>
        <argument line="69">
          <name>$version</name>
          <default>null</default>
          <type>\ImboClient\Version</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="93" package="Client">
        <name>getServerUrls</name>
        <full_name>getServerUrls</full_name>
        <docblock line="90">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="100" package="Client">
        <name>setDriver</name>
        <full_name>setDriver</full_name>
        <docblock line="97">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="100">
          <name>$driver</name>
          <default></default>
          <type>\ImboClient\Driver\DriverInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="109" package="Client">
        <name>getStatusUrl</name>
        <full_name>getStatusUrl</full_name>
        <docblock line="106">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="116" package="Client">
        <name>getUserUrl</name>
        <full_name>getUserUrl</full_name>
        <docblock line="113">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="123" package="Client">
        <name>getImagesUrl</name>
        <full_name>getImagesUrl</full_name>
        <docblock line="120">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="130" package="Client">
        <name>getImageUrl</name>
        <full_name>getImageUrl</full_name>
        <docblock line="127">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="130">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="139" package="Client">
        <name>getMetadataUrl</name>
        <full_name>getMetadataUrl</full_name>
        <docblock line="136">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="139">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="148" package="Client">
        <name>addImage</name>
        <full_name>addImage</full_name>
        <docblock line="145">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="148">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="160" package="Client">
        <name>addImageFromString</name>
        <full_name>addImageFromString</full_name>
        <docblock line="157">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="160">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="176" package="Client">
        <name>addImageFromUrl</name>
        <full_name>addImageFromUrl</full_name>
        <docblock line="173">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="176">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="189" package="Client">
        <name>imageExists</name>
        <full_name>imageExists</full_name>
        <docblock line="186">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="189">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="198" package="Client">
        <name>imageIdentifierExists</name>
        <full_name>imageIdentifierExists</full_name>
        <docblock line="195">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="198">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="215" package="Client">
        <name>headImage</name>
        <full_name>headImage</full_name>
        <docblock line="212">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="215">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="224" package="Client">
        <name>deleteImage</name>
        <full_name>deleteImage</full_name>
        <docblock line="221">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="224">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="234" package="Client">
        <name>editMetadata</name>
        <full_name>editMetadata</full_name>
        <docblock line="231">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="234">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="234">
          <name>$metadata</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="250" package="Client">
        <name>replaceMetadata</name>
        <full_name>replaceMetadata</full_name>
        <docblock line="247">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="250">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="250">
          <name>$metadata</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="266" package="Client">
        <name>deleteMetadata</name>
        <full_name>deleteMetadata</full_name>
        <docblock line="263">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="266">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="276" package="Client">
        <name>getMetadata</name>
        <full_name>getMetadata</full_name>
        <docblock line="273">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="276">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="288" package="Client">
        <name>getNumImages</name>
        <full_name>getNumImages</full_name>
        <docblock line="285">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="300" package="Client">
        <name>getImages</name>
        <full_name>getImages</full_name>
        <docblock line="297">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="300">
          <name>$query</name>
          <default>null</default>
          <type>\ImboClient\Url\Images\QueryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="345" package="Client">
        <name>getImageData</name>
        <full_name>getImageData</full_name>
        <docblock line="342">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="345">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="354" package="Client">
        <name>getImageDataFromUrl</name>
        <full_name>getImageDataFromUrl</full_name>
        <docblock line="351">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="354">
          <name>$url</name>
          <default></default>
          <type>\ImboClient\Url\ImageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="361" package="Client">
        <name>getImageProperties</name>
        <full_name>getImageProperties</full_name>
        <docblock line="358">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="361">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="377" package="Client">
        <name>getImageIdentifier</name>
        <full_name>getImageIdentifier</full_name>
        <docblock line="374">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="377">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="388" package="Client">
        <name>getImageIdentifierFromString</name>
        <full_name>getImageIdentifierFromString</full_name>
        <docblock line="385">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="388">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="395" package="Client">
        <name>getServerStatus</name>
        <full_name>getServerStatus</full_name>
        <docblock line="392">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="415" package="Client">
        <name>getUserInfo</name>
        <full_name>getUserInfo</full_name>
        <docblock line="412">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="431" package="Client">
        <name>generateImageIdentifier</name>
        <full_name>generateImageIdentifier</full_name>
        <docblock line="425">
          <description>Generate an image identifier based on the data of the image</description>
          <long-description></long-description>
          <tag line="425" name="param" description="The actual image data" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="425" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="443" package="Client">
        <name>generateSignature</name>
        <full_name>generateSignature</full_name>
        <docblock line="435">
          <description>Generate a signature that can be sent to the server</description>
          <long-description></long-description>
          <tag line="435" name="param" description="HTTP method (PUT, POST or DELETE)" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="param" description="The URL to send a request to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="param" description="UTC timestamp" type="string" variable="$timestamp">
            <type by_reference="false">string</type>
          </tag>
          <tag line="435" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="443">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="443">
          <name>$timestamp</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="459" package="Client">
        <name>getSignedUrl</name>
        <full_name>getSignedUrl</full_name>
        <docblock line="452">
          <description>Get a signed URL</description>
          <long-description></long-description>
          <tag line="452" name="param" description="HTTP method" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="param" description="The URL to send a request to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="452" name="return" description="Returns a string with the necessary parts for authenticating" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="459">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="480" package="Client">
        <name>validateLocalFile</name>
        <full_name>validateLocalFile</full_name>
        <docblock line="474">
          <description>Helper method to make sure a local file exists, and that it is not empty</description>
          <long-description></long-description>
          <tag line="474" name="param" description="The path to a local file" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="474" name="throws" description="" type="\ImboClient\Exception\InvalidArgumentException">
            <type by_reference="false">\ImboClient\Exception\InvalidArgumentException</type>
          </tag>
        </docblock>
        <argument line="480">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="496" package="Client">
        <name>getHostForImageIdentifier</name>
        <full_name>getHostForImageIdentifier</full_name>
        <docblock line="490">
          <description>Get a predictable hostname for the given image identifier</description>
          <long-description></long-description>
          <tag line="490" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="490" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="496">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient" line="508" package="Client">
        <name>parseUrls</name>
        <full_name>parseUrls</full_name>
        <docblock line="502">
          <description>Parse server host URLs and prepare them for usage</description>
          <long-description></long-description>
          <tag line="502" name="param" description="One or more URLs to an Imbo server" type="array|string" variable="$urls">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="502" name="return" description="Returns an array of URLs" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$urls</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="97" code="50015">Argument $driver is missing from the Docblock of setDriver()</error>
      <error line="127" code="50015">Argument $imageIdentifier is missing from the Docblock of getImageUrl()</error>
      <error line="136" code="50015">Argument $imageIdentifier is missing from the Docblock of getMetadataUrl()</error>
      <error line="145" code="50015">Argument $path is missing from the Docblock of addImage()</error>
      <error line="157" code="50015">Argument $image is missing from the Docblock of addImageFromString()</error>
      <error line="173" code="50015">Argument $url is missing from the Docblock of addImageFromUrl()</error>
      <error line="186" code="50015">Argument $path is missing from the Docblock of imageExists()</error>
      <error line="195" code="50015">Argument $imageIdentifier is missing from the Docblock of imageIdentifierExists()</error>
      <error line="212" code="50015">Argument $imageIdentifier is missing from the Docblock of headImage()</error>
      <error line="221" code="50015">Argument $imageIdentifier is missing from the Docblock of deleteImage()</error>
      <error line="231" code="50015">Argument $imageIdentifier is missing from the Docblock of editMetadata()</error>
      <error line="231" code="50015">Argument $metadata is missing from the Docblock of editMetadata()</error>
      <error line="247" code="50015">Argument $imageIdentifier is missing from the Docblock of replaceMetadata()</error>
      <error line="247" code="50015">Argument $metadata is missing from the Docblock of replaceMetadata()</error>
      <error line="263" code="50015">Argument $imageIdentifier is missing from the Docblock of deleteMetadata()</error>
      <error line="273" code="50015">Argument $imageIdentifier is missing from the Docblock of getMetadata()</error>
      <error line="297" code="50015">Argument $query is missing from the Docblock of getImages()</error>
      <error line="342" code="50015">Argument $imageIdentifier is missing from the Docblock of getImageData()</error>
      <error line="351" code="50015">Argument $url is missing from the Docblock of getImageDataFromUrl()</error>
      <error line="358" code="50015">Argument $imageIdentifier is missing from the Docblock of getImageProperties()</error>
      <error line="374" code="50015">Argument $path is missing from the Docblock of getImageIdentifier()</error>
      <error line="385" code="50015">Argument $image is missing from the Docblock of getImageIdentifierFromString()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Version.php" hash="66bfdf6a41aa1f66207f3142ec7255a3" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient" line="20" package="Version">
      <extends/>
      <name>Version</name>
      <full_name>\ImboClient\Version</full_name>
      <docblock line="13">
        <description>Version class</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Version"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
        <tag line="13" name="codeCoverageIgnore" description=""/>
      </docblock>
      <constant namespace="ImboClient" line="26" package="Version">
        <name>VERSION</name>
        <full_name>VERSION</full_name>
        <value>'0.8.1'</value>
        <docblock line="21">
          <description>The current version</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="33" namespace="ImboClient" package="Default">
        <name>$version</name>
        <default></default>
        <docblock line="28">
          <description>Static version string</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="40" package="Version">
        <name>getVersionNumber</name>
        <full_name>getVersionNumber</full_name>
        <docblock line="35">
          <description>Get the version "number" only</description>
          <long-description></long-description>
          <tag line="35" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="62" package="Version">
        <name>getVersionString</name>
        <full_name>getVersionString</full_name>
        <docblock line="57">
          <description>Get the version string</description>
          <long-description></long-description>
          <tag line="57" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/ClientInterface.php" hash="247afb50e211cdf35cf59141f9934e2d" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient" line="24" package="Client">
      <name>ClientInterface</name>
      <full_name>\ImboClient\ClientInterface</full_name>
      <docblock line="18">
        <description>Interface for the client</description>
        <long-description></long-description>
        <tag line="18" name="package" description="Client"/>
        <tag line="18" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="30" package="Client">
        <name>getServerUrls</name>
        <full_name>getServerUrls</full_name>
        <docblock line="25">
          <description>Return the current server URL's used by the client</description>
          <long-description></long-description>
          <tag line="25" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="38" package="Client">
        <name>setDriver</name>
        <full_name>setDriver</full_name>
        <docblock line="32">
          <description>Set the driver</description>
          <long-description></long-description>
          <tag line="32" name="param" description="The driver to set" type="\ImboClient\Driver\DriverInterface" variable="$driver">
            <type by_reference="false">\ImboClient\Driver\DriverInterface</type>
          </tag>
          <tag line="32" name="return" description="" type="\ImboClient\ClientInterface">
            <type by_reference="false">\ImboClient\ClientInterface</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$driver</name>
          <default></default>
          <type>\ImboClient\Driver\DriverInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="45" package="Client">
        <name>getStatusUrl</name>
        <full_name>getStatusUrl</full_name>
        <docblock line="40">
          <description>Get the URL to the status resource</description>
          <long-description></long-description>
          <tag line="40" name="return" description="" type="\ImboClient\Url\Status">
            <type by_reference="false">\ImboClient\Url\Status</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="52" package="Client">
        <name>getUserUrl</name>
        <full_name>getUserUrl</full_name>
        <docblock line="47">
          <description>Get the URL to the current user</description>
          <long-description></long-description>
          <tag line="47" name="return" description="" type="\ImboClient\Url\User">
            <type by_reference="false">\ImboClient\Url\User</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="59" package="Client">
        <name>getImagesUrl</name>
        <full_name>getImagesUrl</full_name>
        <docblock line="54">
          <description>Get the URL to the images resource of the current user</description>
          <long-description></long-description>
          <tag line="54" name="return" description="" type="\ImboClient\Url\Images">
            <type by_reference="false">\ImboClient\Url\Images</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="67" package="Client">
        <name>getImageUrl</name>
        <full_name>getImageUrl</full_name>
        <docblock line="61">
          <description>Get the URL to a specific image</description>
          <long-description></long-description>
          <tag line="61" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="" type="\ImboClient\Url\Image">
            <type by_reference="false">\ImboClient\Url\Image</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="75" package="Client">
        <name>getMetadataUrl</name>
        <full_name>getMetadataUrl</full_name>
        <docblock line="69">
          <description>Get the URL to the metadata of a specific image</description>
          <long-description></long-description>
          <tag line="69" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="\ImboClient\Url\Metadata">
            <type by_reference="false">\ImboClient\Url\Metadata</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="85" package="Client">
        <name>addImage</name>
        <full_name>addImage</full_name>
        <docblock line="77">
          <description>Add a new image to the server</description>
          <long-description></long-description>
          <tag line="77" name="param" description="Path to the local image" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="throws" description="Throws an exception if the specified file does not exist or&#10;                                 is of zero length" type="\ImboClient\Exception\InvalidArgumentException">
            <type by_reference="false">\ImboClient\Exception\InvalidArgumentException</type>
          </tag>
          <tag line="77" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="94" package="Client">
        <name>addImageFromString</name>
        <full_name>addImageFromString</full_name>
        <docblock line="87">
          <description>Add a new image to the server by using an image in memory and not a local path</description>
          <long-description></long-description>
          <tag line="87" name="param" description="The actual image data to add to the server" type="string" variable="$image">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="throws" description="Throws an exception if the specified image is empty" type="\ImboClient\Exception\InvalidArgumentException">
            <type by_reference="false">\ImboClient\Exception\InvalidArgumentException</type>
          </tag>
          <tag line="87" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="102" package="Client">
        <name>addImageFromUrl</name>
        <full_name>addImageFromUrl</full_name>
        <docblock line="96">
          <description>Add a new image to the server by specifying a URL to an existing image</description>
          <long-description></long-description>
          <tag line="96" name="param" description="URL to the image you want to add" type="\ImboClient\Url\Image|string" variable="$url">
            <type by_reference="false">\ImboClient\Url\Image</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="96" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="112" package="Client">
        <name>imageExists</name>
        <full_name>imageExists</full_name>
        <docblock line="104">
          <description>Checks if a given image exists on the server already by specifying a local path</description>
          <long-description></long-description>
          <tag line="104" name="param" description="Path to the local image" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="throws" description="Throws an exception if the specified file does not exist or&#10;                                 is of zero length" type="\ImboClient\Exception\InvalidArgumentException">
            <type by_reference="false">\ImboClient\Exception\InvalidArgumentException</type>
          </tag>
          <tag line="104" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="120" package="Client">
        <name>imageIdentifierExists</name>
        <full_name>imageIdentifierExists</full_name>
        <docblock line="114">
          <description>Checks if a given image exists on the server already by specifying an image identifier</description>
          <long-description></long-description>
          <tag line="114" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="128" package="Client">
        <name>headImage</name>
        <full_name>headImage</full_name>
        <docblock line="122">
          <description>Request the image using HEAD</description>
          <long-description></long-description>
          <tag line="122" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="136" package="Client">
        <name>deleteImage</name>
        <full_name>deleteImage</full_name>
        <docblock line="130">
          <description>Delete an image from the server</description>
          <long-description></long-description>
          <tag line="130" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="145" package="Client">
        <name>editMetadata</name>
        <full_name>editMetadata</full_name>
        <docblock line="138">
          <description>Edit image metadata</description>
          <long-description></long-description>
          <tag line="138" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="An array of metadata" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$metadata</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="154" package="Client">
        <name>replaceMetadata</name>
        <full_name>replaceMetadata</full_name>
        <docblock line="147">
          <description>Replace all existing metadata</description>
          <long-description></long-description>
          <tag line="147" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="param" description="An array of metadata" type="array" variable="$metadata">
            <type by_reference="false">array</type>
          </tag>
          <tag line="147" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="154">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
        <argument line="154">
          <name>$metadata</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="162" package="Client">
        <name>deleteMetadata</name>
        <full_name>deleteMetadata</full_name>
        <docblock line="156">
          <description>Delete metadata</description>
          <long-description></long-description>
          <tag line="156" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="170" package="Client">
        <name>getMetadata</name>
        <full_name>getMetadata</full_name>
        <docblock line="164">
          <description>Get image metadata</description>
          <long-description></long-description>
          <tag line="164" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="164" name="return" description="Returns an array with metadata" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="177" package="Client">
        <name>getNumImages</name>
        <full_name>getNumImages</full_name>
        <docblock line="172">
          <description>Get the number of images currently stored on the server</description>
          <long-description></long-description>
          <tag line="172" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="185" package="Client">
        <name>getImages</name>
        <full_name>getImages</full_name>
        <docblock line="179">
          <description>Get an array of images currently stored on the server</description>
          <long-description></long-description>
          <tag line="179" name="param" description="A query instance" type="\ImboClient\Url\Images\QueryInterface" variable="$query">
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
          <tag line="179" name="return" description="Returns an array with images (can be empty)" type="\ImboClient\ImageInterface[]">
            <type by_reference="false">\ImboClient\ImageInterface[]</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$query</name>
          <default>null</default>
          <type>\ImboClient\Url\Images\QueryInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="193" package="Client">
        <name>getImageData</name>
        <full_name>getImageData</full_name>
        <docblock line="187">
          <description>Get the binary data of an image stored on the server</description>
          <long-description></long-description>
          <tag line="187" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="201" package="Client">
        <name>getImageDataFromUrl</name>
        <full_name>getImageDataFromUrl</full_name>
        <docblock line="195">
          <description>Get the binary data of an image stored on the server</description>
          <long-description></long-description>
          <tag line="195" name="param" description="URL instance for the image you want to retrieve" type="\ImboClient\Url\ImageInterface" variable="$url">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
          <tag line="195" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$url</name>
          <default></default>
          <type>\ImboClient\Url\ImageInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="217" package="Client">
        <name>getImageProperties</name>
        <full_name>getImageProperties</full_name>
        <docblock line="203">
          <description>Get properties of an image</description>
          <long-description>&lt;p&gt;This method returns an associative array with the following keys:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;width: Width of the image in pixels&lt;/li&gt;
&lt;li&gt;height: Height of the image in pixels&lt;/li&gt;
&lt;li&gt;size: Size of the image in bytes&lt;/li&gt;
&lt;li&gt;mimetype: The original mimetype of the image&lt;/li&gt;
&lt;li&gt;extension: The original extension of the image&lt;/li&gt;
&lt;/ul&gt;</long-description>
          <tag line="203" name="param" description="The image identifier" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="225" package="Client">
        <name>getImageIdentifier</name>
        <full_name>getImageIdentifier</full_name>
        <docblock line="219">
          <description>Generate an image identifier for a given file</description>
          <long-description></long-description>
          <tag line="219" name="param" description="Path to the local image" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="return" description="The image identifier to use with the imbo server" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$path</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="233" package="Client">
        <name>getImageIdentifierFromString</name>
        <full_name>getImageIdentifierFromString</full_name>
        <docblock line="227">
          <description>Generate an image identifier based on actual image data</description>
          <long-description></long-description>
          <tag line="227" name="param" description="String containing an image" type="string" variable="$image">
            <type by_reference="false">string</type>
          </tag>
          <tag line="227" name="return" description="The image identifier to use with the imbo server" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="233">
          <name>$image</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="240" package="Client">
        <name>getServerStatus</name>
        <full_name>getServerStatus</full_name>
        <docblock line="235">
          <description>Get the server status</description>
          <long-description></long-description>
          <tag line="235" name="return" description="Returns an array with the server status" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient" line="247" package="Client">
        <name>getUserInfo</name>
        <full_name>getUserInfo</full_name>
        <docblock line="242">
          <description>Get user information</description>
          <long-description></long-description>
          <tag line="242" name="return" description="Returns an array with the user information" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/Images.php" hash="6e9fcd3cc18f7201872acb2e2cd9f80e" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\Images">
      <extends>\ImboClient\Url\Url</extends>
      <implements>\ImboClient\Url\UrlInterface</implements>
      <name>Images</name>
      <full_name>\ImboClient\Url\Images</full_name>
      <docblock line="13">
        <description>Images URL</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Images"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="23" package="Urls\Images">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="20">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Url/Status.php" hash="7a48eb4b5237b5947cd36bd6a98f5e11" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\Status">
      <extends>\ImboClient\Url\Url</extends>
      <implements>\ImboClient\Url\UrlInterface</implements>
      <name>Status</name>
      <full_name>\ImboClient\Url\Status</full_name>
      <docblock line="13">
        <description>Status URL</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Status"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="23" package="Urls\Status">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="20">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Url/ImageInterface.php" hash="da7e523708a3668b9902d4519afbdda9" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Url" line="19" package="Urls\Image">
      <name>ImageInterface</name>
      <full_name>\ImboClient\Url\ImageInterface</full_name>
      <extends>\ImboClient\Url\UrlInterface</extends>
      <docblock line="13">
        <description>Custom Interface for image URL's</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Image"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="28" package="Urls\Image">
        <name>border</name>
        <full_name>border</full_name>
        <docblock line="20">
          <description>Append a border transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="20" name="param" description="Color of the border" type="string" variable="$color">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="Width of the left and right sides of the border" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="20" name="param" description="Height of the top and bottom parts of the border" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="20" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$color</name>
          <default>'000000'</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$width</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$height</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="36" package="Urls\Image">
        <name>compress</name>
        <full_name>compress</full_name>
        <docblock line="30">
          <description>Append a compress transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="30" name="param" description="A value between 0 and 100 where 100 is the best" type="int" variable="$quality">
            <type by_reference="false">int</type>
          </tag>
          <tag line="30" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="36">
          <name>$quality</name>
          <default>75</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="44" package="Urls\Image">
        <name>convert</name>
        <full_name>convert</full_name>
        <docblock line="38">
          <description>Change the URL to trigger the convert transformation</description>
          <long-description></long-description>
          <tag line="38" name="param" description="The type to convert to" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="51" package="Urls\Image">
        <name>gif</name>
        <full_name>gif</full_name>
        <docblock line="46">
          <description>Convenience method to trigger gif conversion</description>
          <long-description></long-description>
          <tag line="46" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="58" package="Urls\Image">
        <name>jpg</name>
        <full_name>jpg</full_name>
        <docblock line="53">
          <description>Convenience method to trigger jpg conversion</description>
          <long-description></long-description>
          <tag line="53" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="65" package="Urls\Image">
        <name>png</name>
        <full_name>png</full_name>
        <docblock line="60">
          <description>Convenience method to trigger png conversion</description>
          <long-description></long-description>
          <tag line="60" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="76" package="Urls\Image">
        <name>crop</name>
        <full_name>crop</full_name>
        <docblock line="67">
          <description>Append a crop transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="67" name="param" description="X coordinate of the top left corner of the crop" type="int" variable="$x">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="param" description="Y coordinate of the top left corner of the crop" type="int" variable="$y">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="param" description="Width of the crop" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="param" description="Height of the crop" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$x</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$y</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="83" package="Urls\Image">
        <name>flipHorizontally</name>
        <full_name>flipHorizontally</full_name>
        <docblock line="78">
          <description>Append a flipHorizontally transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="78" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="90" package="Urls\Image">
        <name>flipVertically</name>
        <full_name>flipVertically</full_name>
        <docblock line="85">
          <description>Append a flipVertically transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="85" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="99" package="Urls\Image">
        <name>resize</name>
        <full_name>resize</full_name>
        <docblock line="92">
          <description>Append a resize transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="92" name="param" description="Width of the resized image" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="92" name="param" description="Height of the resized image" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="92" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$width</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="99">
          <name>$height</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="108" package="Urls\Image">
        <name>maxSize</name>
        <full_name>maxSize</full_name>
        <docblock line="101">
          <description>Append a maxSize transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="101" name="param" description="Max width of the resized image" type="int" variable="$maxWidth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="param" description="Max height of the resized image" type="int" variable="$maxHeight">
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$maxWidth</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="108">
          <name>$maxHeight</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="117" package="Urls\Image">
        <name>rotate</name>
        <full_name>rotate</full_name>
        <docblock line="110">
          <description>Append a rotate transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="110" name="param" description="The angle to rotate" type="float" variable="$angle">
            <type by_reference="false">float</type>
          </tag>
          <tag line="110" name="param" description="Background color of the rotated image" type="string" variable="$bg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$angle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="117">
          <name>$bg</name>
          <default>'000000'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="127" package="Urls\Image">
        <name>thumbnail</name>
        <full_name>thumbnail</full_name>
        <docblock line="119">
          <description>Append a thumbnail transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="119" name="param" description="Width of the thumbnail" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="119" name="param" description="Height of the thumbnail" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="119" name="param" description="Fit type. 'outbound' or 'inset'" type="string" variable="$fit">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$width</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="127">
          <name>$height</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="127">
          <name>$fit</name>
          <default>'outbound'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="140" package="Urls\Image">
        <name>canvas</name>
        <full_name>canvas</full_name>
        <docblock line="129">
          <description>Append a canvas transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="129" name="param" description="Width of the new canvas" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="param" description="Height of the new canvas" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="param" description="The placement mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="X coordinate of the placement of the upper left corner of the existing image" type="int" variable="$x">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="param" description="Y coordinate of the placement of the upper left corner of the existing image" type="int" variable="$y">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="param" description="Background color of the canvas" type="string" variable="$bg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
        <argument line="140">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="140">
          <name>$x</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="140">
          <name>$y</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="140">
          <name>$bg</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="147" package="Urls\Image">
        <name>transpose</name>
        <full_name>transpose</full_name>
        <docblock line="142">
          <description>Append a transpose transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="142" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="154" package="Urls\Image">
        <name>transverse</name>
        <full_name>transverse</full_name>
        <docblock line="149">
          <description>Append a transverse transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="149" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="161" package="Urls\Image">
        <name>desaturate</name>
        <full_name>desaturate</full_name>
        <docblock line="156">
          <description>Append a desaturate transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="156" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="169" package="Urls\Image">
        <name>sepia</name>
        <full_name>sepia</full_name>
        <docblock line="163">
          <description>Append a sepia transformation query parameter to the URL</description>
          <long-description></long-description>
          <tag line="163" name="param" description="Measure of the extent of sepia toning (ranges from 0 to QuantumRange)" type="int" variable="$threshold">
            <type by_reference="false">int</type>
          </tag>
          <tag line="163" name="return" description="" type="\ImboClient\Url\ImageInterface">
            <type by_reference="false">\ImboClient\Url\ImageInterface</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$threshold</name>
          <default>80</default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/AccessTokenInterface.php" hash="8d8e5e618318d657cfc0b5c1ed3bd23a" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Url" line="19" package="Urls\Access token">
      <name>AccessTokenInterface</name>
      <full_name>\ImboClient\Url\AccessTokenInterface</full_name>
      <docblock line="13">
        <description>Access token interface</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Access token"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="28" package="Urls\Access token">
        <name>generateToken</name>
        <full_name>generateToken</full_name>
        <docblock line="20">
          <description>Generate an access token for a given URL using a key</description>
          <long-description></long-description>
          <tag line="20" name="param" description="The URL to generate the token for" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="param" description="The key to use when generating the token" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="20" name="return" description="Returns an access token for a URL. Given the same URL and key combo this&#10;               method returns the same token every time." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="28">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/Url.php" hash="f1a3df7be476eca0f3ce6f0916e89894" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="true" namespace="ImboClient\Url" line="19" package="Urls">
      <extends/>
      <implements>\ImboClient\Url\UrlInterface</implements>
      <name>Url</name>
      <full_name>\ImboClient\Url\Url</full_name>
      <docblock line="13">
        <description>Abstract imbo URL for other implementations to extend</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="25" namespace="ImboClient\Url" package="Default">
        <name>$baseUrl</name>
        <default></default>
        <docblock line="20">
          <description>Base URL</description>
          <long-description></long-description>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="ImboClient\Url" package="Default">
        <name>$publicKey</name>
        <default></default>
        <docblock line="27">
          <description>Public key</description>
          <long-description></long-description>
          <tag line="27" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="39" namespace="ImboClient\Url" package="Default">
        <name>$privateKey</name>
        <default></default>
        <docblock line="34">
          <description>Private key</description>
          <long-description></long-description>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="46" namespace="ImboClient\Url" package="Default">
        <name>$accessToken</name>
        <default></default>
        <docblock line="41">
          <description>Access token generator</description>
          <long-description></long-description>
          <tag line="41" name="var" description="" type="\ImboClient\Url\AccessTokenInterface">
            <type by_reference="false">\ImboClient\Url\AccessTokenInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" namespace="ImboClient\Url" package="Default">
        <name>$queryParams</name>
        <default></default>
        <docblock line="48">
          <description>Query params for the URL</description>
          <long-description></long-description>
          <tag line="48" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="62" package="Urls">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag line="55" name="param" description="The base URL to use" type="string" variable="$baseUrl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="The public key to use" type="string" variable="$publicKey">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="The private key to use" type="string" variable="$privateKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$baseUrl</name>
          <default></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$publicKey</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="62">
          <name>$privateKey</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="71" package="Urls">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="68">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="92" package="Urls">
        <name>getUrlEncoded</name>
        <full_name>getUrlEncoded</full_name>
        <docblock line="89">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="105" package="Urls">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="102">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="112" package="Urls">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="109">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="112">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="112">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="123" package="Urls">
        <name>addQueryParam</name>
        <full_name>addQueryParam</full_name>
        <docblock line="120">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="123">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="132" package="Urls">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="129">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="146" package="Urls">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="138">
          <description>Get an instance of the access token</description>
          <long-description>&lt;p&gt;If no instance have been provided prior to calling this method, this method must instantiate
the ImboClient\Url\AccessToken class and return that instance.&lt;/p&gt;</long-description>
          <tag line="138" name="return" description="" type="\ImboClient\Url\AccessTokenInterface">
            <type by_reference="false">\ImboClient\Url\AccessTokenInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="160" package="Urls">
        <name>setAccessToken</name>
        <full_name>setAccessToken</full_name>
        <docblock line="154">
          <description>Set an instance of the access token</description>
          <long-description></long-description>
          <tag line="154" name="param" description="An instance of the access token" type="\ImboClient\Url\AccessTokenInterface" variable="$accessToken">
            <type by_reference="false">\ImboClient\Url\AccessTokenInterface</type>
          </tag>
          <tag line="154" name="return" description="" type="\ImboClient\Url\UrlInterface">
            <type by_reference="false">\ImboClient\Url\UrlInterface</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$accessToken</name>
          <default></default>
          <type>\ImboClient\Url\AccessTokenInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url" line="171" package="Urls">
        <name>getQueryString</name>
        <full_name>getQueryString</full_name>
        <docblock line="166">
          <description>Return the query string</description>
          <long-description></long-description>
          <tag line="166" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="ImboClient\Url" line="184" package="Urls">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="179">
          <description>Get the raw URL (with no access token appended)</description>
          <long-description></long-description>
          <tag line="179" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="109" code="50015">Argument $method is missing from the Docblock of __call()</error>
      <error line="109" code="50015">Argument $args is missing from the Docblock of __call()</error>
      <error line="120" code="50015">Argument $key is missing from the Docblock of addQueryParam()</error>
      <error line="120" code="50015">Argument $value is missing from the Docblock of addQueryParam()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Url/UrlInterface.php" hash="940d0b76106466dfe5fd9a89d517df20" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Url" line="19" package="Urls">
      <name>UrlInterface</name>
      <full_name>\ImboClient\Url\UrlInterface</full_name>
      <docblock line="13">
        <description>Base interface for imbo URL's</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="25" package="Urls">
        <name>getUrl</name>
        <full_name>getUrl</full_name>
        <docblock line="20">
          <description>Fetch the complete URL including optional query parameters</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="32" package="Urls">
        <name>getUrlEncoded</name>
        <full_name>getUrlEncoded</full_name>
        <docblock line="27">
          <description>Get the complete URL as an URL-encoded string</description>
          <long-description></long-description>
          <tag line="27" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="39" package="Urls">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="34">
          <description>Resets the URL - removes all query parameters</description>
          <long-description></long-description>
          <tag line="34" name="return" description="" type="\ImboClient\Url\UrlInterface">
            <type by_reference="false">\ImboClient\Url\UrlInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="48" package="Urls">
        <name>addQueryParam</name>
        <full_name>addQueryParam</full_name>
        <docblock line="41">
          <description>Method for adding query parameters to the URL</description>
          <long-description></long-description>
          <tag line="41" name="param" description="The name of the param. For instance &quot;page&quot; or &quot;t[]&quot;" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="The value of the param. For instance &quot;10&quot; or &quot;border:width=50,height=50&quot;" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="return" description="" type="\ImboClient\Url\UrlInterface">
            <type by_reference="false">\ImboClient\Url\UrlInterface</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="67" package="Urls">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="50">
          <description>Magic call method that can be used to add simple query parameters to the URL</description>
          <long-description>&lt;p&gt;This method must be implemented in such a fashion that users can call non-existing methods
on the URL instance that will be added as query parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$url = new ImboClient\Url\Images('http://imbo', 'publicKey', 'privateKey');
$url-&amp;gt;page(2)-&amp;gt;limit(10);

echo $url; // http://imbo/users/publicKey/images?page=2&amp;amp;limit=10
&lt;/code&gt;&lt;/pre&gt;</long-description>
          <tag line="50" name="param" description="The method called (will be used as query parameter name)" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="Arguments to the method. The first argument will be used as query&#10;                   parameter value" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="\ImboClient\Url\UrlInterface">
            <type by_reference="false">\ImboClient\Url\UrlInterface</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$method</name>
          <default></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$args</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="76" package="Urls">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="69">
          <description>Magic to string method</description>
          <long-description>&lt;p&gt;This method should proxy to getUrl()&lt;/p&gt;</long-description>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/Images/ImageInterface.php" hash="56f43fddbf7595406c76913c1a36c7ff" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Url\Images" line="22" package="Urls\Images">
      <name>ImageInterface</name>
      <full_name>\ImboClient\Url\Images\ImageInterface</full_name>
      <docblock line="15">
        <description>Interface for an image found in a response to an images query</description>
        <long-description></long-description>
        <tag line="15" name="package" description="Urls\Images"/>
        <tag line="15" name="author" description="Espen Hovlandsdal &lt;espen@hovlandsdal.com&gt;"/>
        <tag line="15" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="28" package="Urls\Images">
        <name>getIdentifier</name>
        <full_name>getIdentifier</full_name>
        <docblock line="23">
          <description>Returns the image identifier for the image</description>
          <long-description></long-description>
          <tag line="23" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="35" package="Urls\Images">
        <name>getSize</name>
        <full_name>getSize</full_name>
        <docblock line="30">
          <description>Returns the size of the image, in bytes</description>
          <long-description></long-description>
          <tag line="30" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="42" package="Urls\Images">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="37">
          <description>Returns the original extension for the image</description>
          <long-description></long-description>
          <tag line="37" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="49" package="Urls\Images">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="44">
          <description>Returns the mime type of the image</description>
          <long-description></long-description>
          <tag line="44" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="56" package="Urls\Images">
        <name>getAddedDate</name>
        <full_name>getAddedDate</full_name>
        <docblock line="51">
          <description>Returns the date on which the image was added</description>
          <long-description></long-description>
          <tag line="51" name="return" description="" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="63" package="Urls\Images">
        <name>getUpdatedDate</name>
        <full_name>getUpdatedDate</full_name>
        <docblock line="58">
          <description>Returns the date on which the image was last updated</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="70" package="Urls\Images">
        <name>getWidth</name>
        <full_name>getWidth</full_name>
        <docblock line="65">
          <description>Returns the width of the image, in pixels</description>
          <long-description></long-description>
          <tag line="65" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="77" package="Urls\Images">
        <name>getHeight</name>
        <full_name>getHeight</full_name>
        <docblock line="72">
          <description>Returns the height of the image, in pixels</description>
          <long-description></long-description>
          <tag line="72" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="84" package="Urls\Images">
        <name>getChecksum</name>
        <full_name>getChecksum</full_name>
        <docblock line="79">
          <description>Returns an MD5 checksum of the image data</description>
          <long-description></long-description>
          <tag line="79" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="91" package="Urls\Images">
        <name>getPublicKey</name>
        <full_name>getPublicKey</full_name>
        <docblock line="86">
          <description>Returns the public key in which the image is cataloged under</description>
          <long-description></long-description>
          <tag line="86" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/Images/QueryInterface.php" hash="5ce28c81b7bf50492ffd10edbf1247f4" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Url\Images" line="20" package="Urls\Images">
      <name>QueryInterface</name>
      <full_name>\ImboClient\Url\Images\QueryInterface</full_name>
      <docblock line="13">
        <description>Images query interface</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Images"/>
        <tag line="13" name="author" description="Espen Hovlandsdal &lt;espen@hovlandsdal.com&gt;"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="27" package="Urls\Images">
        <name>page</name>
        <full_name>page</full_name>
        <docblock line="21">
          <description>Set or get the page property</description>
          <long-description></long-description>
          <tag line="21" name="param" description="Give this a value to set the page property" type="int" variable="$page">
            <type by_reference="false">int</type>
          </tag>
          <tag line="21" name="return" description="" type="int|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">int</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$page</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="35" package="Urls\Images">
        <name>limit</name>
        <full_name>limit</full_name>
        <docblock line="29">
          <description>Set or get the limit property</description>
          <long-description></long-description>
          <tag line="29" name="param" description="Give this a value to set the limit property" type="int" variable="$limit">
            <type by_reference="false">int</type>
          </tag>
          <tag line="29" name="return" description="" type="int|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">int</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="43" package="Urls\Images">
        <name>returnMetadata</name>
        <full_name>returnMetadata</full_name>
        <docblock line="37">
          <description>Set or get the returnMetadata flag</description>
          <long-description></long-description>
          <tag line="37" name="param" description="Give this a value to set the returnMetadata flag" type="boolean" variable="$returnMetadata">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="37" name="return" description="" type="boolean|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">boolean</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$returnMetadata</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="51" package="Urls\Images">
        <name>metadataQuery</name>
        <full_name>metadataQuery</full_name>
        <docblock line="45">
          <description>Set or get the metadataQuery property</description>
          <long-description></long-description>
          <tag line="45" name="param" description="Give this a value to set the property" type="array" variable="$metadataQuery">
            <type by_reference="false">array</type>
          </tag>
          <tag line="45" name="return" description="" type="array|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">array</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$metadataQuery</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="59" package="Urls\Images">
        <name>from</name>
        <full_name>from</full_name>
        <docblock line="53">
          <description>Set or get the from attribute</description>
          <long-description></long-description>
          <tag line="53" name="param" description="Give this a value to set the from property" type="int" variable="$from">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="return" description="" type="int|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">int</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$from</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="67" package="Urls\Images">
        <name>to</name>
        <full_name>to</full_name>
        <docblock line="61">
          <description>Set or get the to attribute</description>
          <long-description></long-description>
          <tag line="61" name="param" description="Give this a value to set the to property" type="int" variable="$to">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="return" description="" type="int|\ImboClient\Url\Images\QueryInterface">
            <type by_reference="false">int</type>
            <type by_reference="false">\ImboClient\Url\Images\QueryInterface</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$to</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Url/Images/Image.php" hash="fe16bd193df507ae25630eeef97a7b0f" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url\Images" line="22" package="Urls\Images">
      <extends/>
      <implements>\ImboClient\Url\Images\ImageInterface</implements>
      <name>Image</name>
      <full_name>\ImboClient\Url\Images\Image</full_name>
      <docblock line="15">
        <description>Image implementation</description>
        <long-description></long-description>
        <tag line="15" name="package" description="Urls\Images"/>
        <tag line="15" name="author" description="Espen Hovlandsdal &lt;espen@hovlandsdal.com&gt;"/>
        <tag line="15" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" namespace="ImboClient\Url\Images" package="Default">
        <name>$identifier</name>
        <default></default>
        <docblock line="23">
          <description>Image identifier</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="ImboClient\Url\Images" package="Default">
        <name>$size</name>
        <default></default>
        <docblock line="30">
          <description>Size of image, in bytes</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="ImboClient\Url\Images" package="Default">
        <name>$extension</name>
        <default></default>
        <docblock line="37">
          <description>Extension of original image</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="49" namespace="ImboClient\Url\Images" package="Default">
        <name>$mimeType</name>
        <default></default>
        <docblock line="44">
          <description>Mime type of original image</description>
          <long-description></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="ImboClient\Url\Images" package="Default">
        <name>$addedDate</name>
        <default></default>
        <docblock line="51">
          <description>Date which the image was added</description>
          <long-description></long-description>
          <tag line="51" name="var" description="" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="ImboClient\Url\Images" package="Default">
        <name>$updatedDate</name>
        <default></default>
        <docblock line="58">
          <description>Date which the image was last updated</description>
          <long-description></long-description>
          <tag line="58" name="var" description="" type="\DateTime">
            <type by_reference="false">\DateTime</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="70" namespace="ImboClient\Url\Images" package="Default">
        <name>$width</name>
        <default></default>
        <docblock line="65">
          <description>Width of the image, in pixels</description>
          <long-description></long-description>
          <tag line="65" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="77" namespace="ImboClient\Url\Images" package="Default">
        <name>$height</name>
        <default></default>
        <docblock line="72">
          <description>Height of the image, in pixels</description>
          <long-description></long-description>
          <tag line="72" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="84" namespace="ImboClient\Url\Images" package="Default">
        <name>$checksum</name>
        <default></default>
        <docblock line="79">
          <description>MD5 checksum for the original image</description>
          <long-description></long-description>
          <tag line="79" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="ImboClient\Url\Images" package="Default">
        <name>$publicKey</name>
        <default></default>
        <docblock line="86">
          <description>Public key for this image</description>
          <long-description></long-description>
          <tag line="86" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="98" package="Urls\Images">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="93">
          <description>Creates a new Image instance from passed data</description>
          <long-description></long-description>
          <tag line="93" name="param" description="Array of data for the given image" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$data</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="109" package="Urls\Images">
        <name>populate</name>
        <full_name>populate</full_name>
        <docblock line="104">
          <description>Populate this instance</description>
          <long-description></long-description>
          <tag line="104" name="param" description="Data from the response" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$data</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="125" package="Urls\Images">
        <name>getIdentifier</name>
        <full_name>getIdentifier</full_name>
        <docblock line="122">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="132" package="Urls\Images">
        <name>getSize</name>
        <full_name>getSize</full_name>
        <docblock line="129">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="139" package="Urls\Images">
        <name>getExtension</name>
        <full_name>getExtension</full_name>
        <docblock line="136">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="146" package="Urls\Images">
        <name>getMimeType</name>
        <full_name>getMimeType</full_name>
        <docblock line="143">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="153" package="Urls\Images">
        <name>getAddedDate</name>
        <full_name>getAddedDate</full_name>
        <docblock line="150">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="160" package="Urls\Images">
        <name>getUpdatedDate</name>
        <full_name>getUpdatedDate</full_name>
        <docblock line="157">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="167" package="Urls\Images">
        <name>getWidth</name>
        <full_name>getWidth</full_name>
        <docblock line="164">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="174" package="Urls\Images">
        <name>getHeight</name>
        <full_name>getHeight</full_name>
        <docblock line="171">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="181" package="Urls\Images">
        <name>getChecksum</name>
        <full_name>getChecksum</full_name>
        <docblock line="178">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="188" package="Urls\Images">
        <name>getPublicKey</name>
        <full_name>getPublicKey</full_name>
        <docblock line="185">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="197" package="Urls\Images">
        <name>setIdentifier</name>
        <full_name>setIdentifier</full_name>
        <docblock line="192">
          <description>Set image identifier</description>
          <long-description></long-description>
          <tag line="192" name="param" description="" type="string" variable="$identifier">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$identifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="206" package="Urls\Images">
        <name>setSize</name>
        <full_name>setSize</full_name>
        <docblock line="201">
          <description>Set image size, in bytes</description>
          <long-description></long-description>
          <tag line="201" name="param" description="" type="integer" variable="$size">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$size</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="215" package="Urls\Images">
        <name>setExtension</name>
        <full_name>setExtension</full_name>
        <docblock line="210">
          <description>Set image extension</description>
          <long-description></long-description>
          <tag line="210" name="param" description="" type="string" variable="$extension">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$extension</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="224" package="Urls\Images">
        <name>setMimeType</name>
        <full_name>setMimeType</full_name>
        <docblock line="219">
          <description>Set image mime type</description>
          <long-description></long-description>
          <tag line="219" name="param" description="" type="string" variable="$mime">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$mime</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="233" package="Urls\Images">
        <name>setAddedDate</name>
        <full_name>setAddedDate</full_name>
        <docblock line="228">
          <description>Set date when image was added to the server</description>
          <long-description></long-description>
          <tag line="228" name="param" description="" type="string" variable="$added">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="233">
          <name>$added</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="242" package="Urls\Images">
        <name>setUpdatedDate</name>
        <full_name>setUpdatedDate</full_name>
        <docblock line="237">
          <description>Set date when image was last updated on the server</description>
          <long-description></long-description>
          <tag line="237" name="param" description="" type="string" variable="$updated">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$updated</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="251" package="Urls\Images">
        <name>setWidth</name>
        <full_name>setWidth</full_name>
        <docblock line="246">
          <description>Set width of the image, in pixels</description>
          <long-description></long-description>
          <tag line="246" name="param" description="" type="int" variable="$width">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="260" package="Urls\Images">
        <name>setHeight</name>
        <full_name>setHeight</full_name>
        <docblock line="255">
          <description>Set height of the image, in pixels</description>
          <long-description></long-description>
          <tag line="255" name="param" description="" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="269" package="Urls\Images">
        <name>setChecksum</name>
        <full_name>setChecksum</full_name>
        <docblock line="264">
          <description>Set checksum of image data</description>
          <long-description></long-description>
          <tag line="264" name="param" description="" type="string" variable="$checksum">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$checksum</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Url\Images" line="278" package="Urls\Images">
        <name>setPublicKey</name>
        <full_name>setPublicKey</full_name>
        <docblock line="273">
          <description>Set public key the image is catalogued under</description>
          <long-description></long-description>
          <tag line="273" name="param" description="" type="string" variable="$publicKey">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Url/Images/Query.php" hash="fca3f1279eb81220895704a95c822e2e" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url\Images" line="20" package="Urls\Images">
      <extends/>
      <implements>\ImboClient\Url\Images\QueryInterface</implements>
      <name>Query</name>
      <full_name>\ImboClient\Url\Images\Query</full_name>
      <docblock line="13">
        <description>Query object for the images resource</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Images"/>
        <tag line="13" name="author" description="Espen Hovlandsdal &lt;espen@hovlandsdal.com&gt;"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="26" namespace="ImboClient\Url\Images" package="Default">
        <name>$page</name>
        <default>1</default>
        <docblock line="21">
          <description>The page to get</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="ImboClient\Url\Images" package="Default">
        <name>$limit</name>
        <default>20</default>
        <docblock line="28">
          <description>Number of images to get</description>
          <long-description></long-description>
          <tag line="28" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="ImboClient\Url\Images" package="Default">
        <name>$returnMetadata</name>
        <default>false</default>
        <docblock line="35">
          <description>Return metadata or not</description>
          <long-description></long-description>
          <tag line="35" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="47" namespace="ImboClient\Url\Images" package="Default">
        <name>$metadataQuery</name>
        <default>array()</default>
        <docblock line="42">
          <description>Metadata query</description>
          <long-description></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" namespace="ImboClient\Url\Images" package="Default">
        <name>$from</name>
        <default></default>
        <docblock line="49">
          <description>Unix timestamp to start fetching from</description>
          <long-description></long-description>
          <tag line="49" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="ImboClient\Url\Images" package="Default">
        <name>$to</name>
        <default></default>
        <docblock line="56">
          <description>Unix timestamp to fetch until</description>
          <long-description></long-description>
          <tag line="56" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="66" package="Urls\Images">
        <name>page</name>
        <full_name>page</full_name>
        <docblock line="63">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="66">
          <name>$page</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="79" package="Urls\Images">
        <name>limit</name>
        <full_name>limit</full_name>
        <docblock line="76">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="79">
          <name>$limit</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="92" package="Urls\Images">
        <name>returnMetadata</name>
        <full_name>returnMetadata</full_name>
        <docblock line="89">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="92">
          <name>$returnMetadata</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="105" package="Urls\Images">
        <name>metadataQuery</name>
        <full_name>metadataQuery</full_name>
        <docblock line="102">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="105">
          <name>$metadataQuery</name>
          <default>null</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="118" package="Urls\Images">
        <name>from</name>
        <full_name>from</full_name>
        <docblock line="115">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="118">
          <name>$from</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url\Images" line="131" package="Urls\Images">
        <name>to</name>
        <full_name>to</full_name>
        <docblock line="128">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="131">
          <name>$to</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="63" code="50015">Argument $page is missing from the Docblock of page()</error>
      <error line="76" code="50015">Argument $limit is missing from the Docblock of limit()</error>
      <error line="89" code="50015">Argument $returnMetadata is missing from the Docblock of returnMetadata()</error>
      <error line="102" code="50015">Argument $metadataQuery is missing from the Docblock of metadataQuery()</error>
      <error line="115" code="50015">Argument $from is missing from the Docblock of from()</error>
      <error line="128" code="50015">Argument $to is missing from the Docblock of to()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Url/User.php" hash="94832559d558bdc42d410098b9157c96" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\User">
      <extends>\ImboClient\Url\Url</extends>
      <implements>\ImboClient\Url\UrlInterface</implements>
      <name>User</name>
      <full_name>\ImboClient\Url\User</full_name>
      <docblock line="13">
        <description>User URL</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\User"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="23" package="Urls\User">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="20">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Url/Metadata.php" hash="ce04812acc98e6dad467e290a7be1e53" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\Metadata">
      <extends>\ImboClient\Url\Url</extends>
      <implements>\ImboClient\Url\UrlInterface</implements>
      <name>Metadata</name>
      <full_name>\ImboClient\Url\Metadata</full_name>
      <docblock line="13">
        <description>Metadata URL</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Metadata"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25" namespace="ImboClient\Url" package="Default">
        <name>$imageIdentifier</name>
        <default></default>
        <docblock line="20">
          <description>Image identifier</description>
          <long-description></long-description>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="33" package="Urls\Metadata">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>Class constructor</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="27" name="param" description="The image identifier to use in the URL" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$baseUrl</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$privateKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="42" package="Urls\Metadata">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="27" code="50014">Name of argument $baseUrl does not match with the DocBlock's name $imageIdentifier in __construct()</error>
      <error line="27" code="50015">Argument $publicKey is missing from the Docblock of __construct()</error>
      <error line="27" code="50015">Argument $privateKey is missing from the Docblock of __construct()</error>
      <error line="27" code="50015">Argument $imageIdentifier is missing from the Docblock of __construct()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Url/Image.php" hash="48437e56749a14062ee65d289e0694ac" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\Image">
      <extends>\ImboClient\Url\Url</extends>
      <implements>\ImboClient\Url\ImageInterface</implements>
      <name>Image</name>
      <full_name>\ImboClient\Url\Image</full_name>
      <docblock line="13">
        <description>Image URL</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Image"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="25" namespace="ImboClient\Url" package="Default">
        <name>$imageIdentifier</name>
        <default></default>
        <docblock line="20">
          <description>Image identifier</description>
          <long-description></long-description>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="33" package="Urls\Image">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="27">
          <description>Class constructor</description>
          <long-description>&lt;p&gt;{@inheritdoc}&lt;/p&gt;</long-description>
          <tag line="27" name="param" description="The image identifier to use in the URL" type="string" variable="$imageIdentifier">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$baseUrl</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$publicKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$privateKey</name>
          <default></default>
          <type/>
        </argument>
        <argument line="33">
          <name>$imageIdentifier</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="42" package="Urls\Image">
        <name>border</name>
        <full_name>border</full_name>
        <docblock line="39">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="42">
          <name>$color</name>
          <default>'000000'</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$width</name>
          <default>1</default>
          <type/>
        </argument>
        <argument line="42">
          <name>$height</name>
          <default>1</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="49" package="Urls\Image">
        <name>compress</name>
        <full_name>compress</full_name>
        <docblock line="46">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="49">
          <name>$quality</name>
          <default>75</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="56" package="Urls\Image">
        <name>convert</name>
        <full_name>convert</full_name>
        <docblock line="53">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="56">
          <name>$type</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="65" package="Urls\Image">
        <name>gif</name>
        <full_name>gif</full_name>
        <docblock line="62">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="72" package="Urls\Image">
        <name>jpg</name>
        <full_name>jpg</full_name>
        <docblock line="69">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="79" package="Urls\Image">
        <name>png</name>
        <full_name>png</full_name>
        <docblock line="76">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="86" package="Urls\Image">
        <name>crop</name>
        <full_name>crop</full_name>
        <docblock line="83">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="86">
          <name>$x</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$y</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="93" package="Urls\Image">
        <name>flipHorizontally</name>
        <full_name>flipHorizontally</full_name>
        <docblock line="90">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="100" package="Urls\Image">
        <name>flipVertically</name>
        <full_name>flipVertically</full_name>
        <docblock line="97">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="107" package="Urls\Image">
        <name>resize</name>
        <full_name>resize</full_name>
        <docblock line="104">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="107">
          <name>$width</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="107">
          <name>$height</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="124" package="Urls\Image">
        <name>maxSize</name>
        <full_name>maxSize</full_name>
        <docblock line="121">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="124">
          <name>$maxWidth</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="124">
          <name>$maxHeight</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="141" package="Urls\Image">
        <name>rotate</name>
        <full_name>rotate</full_name>
        <docblock line="138">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="141">
          <name>$angle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$bg</name>
          <default>'000000'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="148" package="Urls\Image">
        <name>thumbnail</name>
        <full_name>thumbnail</full_name>
        <docblock line="145">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="148">
          <name>$width</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$height</name>
          <default>50</default>
          <type/>
        </argument>
        <argument line="148">
          <name>$fit</name>
          <default>'outbound'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="155" package="Urls\Image">
        <name>canvas</name>
        <full_name>canvas</full_name>
        <docblock line="152">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="155">
          <name>$width</name>
          <default></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$height</name>
          <default></default>
          <type/>
        </argument>
        <argument line="155">
          <name>$mode</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="155">
          <name>$x</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="155">
          <name>$y</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="155">
          <name>$bg</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="183" package="Urls\Image">
        <name>transpose</name>
        <full_name>transpose</full_name>
        <docblock line="180">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="190" package="Urls\Image">
        <name>transverse</name>
        <full_name>transverse</full_name>
        <docblock line="187">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="197" package="Urls\Image">
        <name>desaturate</name>
        <full_name>desaturate</full_name>
        <docblock line="194">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="204" package="Urls\Image">
        <name>sepia</name>
        <full_name>sepia</full_name>
        <docblock line="201">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="204">
          <name>$threshold</name>
          <default>80</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="211" package="Urls\Image">
        <name>reset</name>
        <full_name>reset</full_name>
        <docblock line="208">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Url" line="222" package="Urls\Image">
        <name>getResourceUrl</name>
        <full_name>getResourceUrl</full_name>
        <docblock line="219">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="27" code="50014">Name of argument $baseUrl does not match with the DocBlock's name $imageIdentifier in __construct()</error>
      <error line="27" code="50015">Argument $publicKey is missing from the Docblock of __construct()</error>
      <error line="27" code="50015">Argument $privateKey is missing from the Docblock of __construct()</error>
      <error line="27" code="50015">Argument $imageIdentifier is missing from the Docblock of __construct()</error>
      <error line="39" code="50015">Argument $color is missing from the Docblock of border()</error>
      <error line="39" code="50015">Argument $width is missing from the Docblock of border()</error>
      <error line="39" code="50015">Argument $height is missing from the Docblock of border()</error>
      <error line="46" code="50015">Argument $quality is missing from the Docblock of compress()</error>
      <error line="53" code="50015">Argument $type is missing from the Docblock of convert()</error>
      <error line="83" code="50015">Argument $x is missing from the Docblock of crop()</error>
      <error line="83" code="50015">Argument $y is missing from the Docblock of crop()</error>
      <error line="83" code="50015">Argument $width is missing from the Docblock of crop()</error>
      <error line="83" code="50015">Argument $height is missing from the Docblock of crop()</error>
      <error line="104" code="50015">Argument $width is missing from the Docblock of resize()</error>
      <error line="104" code="50015">Argument $height is missing from the Docblock of resize()</error>
      <error line="121" code="50015">Argument $maxWidth is missing from the Docblock of maxSize()</error>
      <error line="121" code="50015">Argument $maxHeight is missing from the Docblock of maxSize()</error>
      <error line="138" code="50015">Argument $angle is missing from the Docblock of rotate()</error>
      <error line="138" code="50015">Argument $bg is missing from the Docblock of rotate()</error>
      <error line="145" code="50015">Argument $width is missing from the Docblock of thumbnail()</error>
      <error line="145" code="50015">Argument $height is missing from the Docblock of thumbnail()</error>
      <error line="145" code="50015">Argument $fit is missing from the Docblock of thumbnail()</error>
      <error line="152" code="50015">Argument $width is missing from the Docblock of canvas()</error>
      <error line="152" code="50015">Argument $height is missing from the Docblock of canvas()</error>
      <error line="152" code="50015">Argument $mode is missing from the Docblock of canvas()</error>
      <error line="152" code="50015">Argument $x is missing from the Docblock of canvas()</error>
      <error line="152" code="50015">Argument $y is missing from the Docblock of canvas()</error>
      <error line="152" code="50015">Argument $bg is missing from the Docblock of canvas()</error>
      <error line="201" code="50015">Argument $threshold is missing from the Docblock of sepia()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Url/AccessToken.php" hash="6c90754dae6507b43b0a9604350fe58c" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Url" line="19" package="Urls\Access token">
      <extends/>
      <implements>\ImboClient\Url\AccessTokenInterface</implements>
      <name>AccessToken</name>
      <full_name>\ImboClient\Url\AccessToken</full_name>
      <docblock line="13">
        <description>Access token implementation</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Urls\Access token"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Url" line="23" package="Urls\Access token">
        <name>generateToken</name>
        <full_name>generateToken</full_name>
        <docblock line="20">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="23">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="23">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="20" code="50015">Argument $url is missing from the Docblock of generateToken()</error>
      <error line="20" code="50015">Argument $key is missing from the Docblock of generateToken()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Exception.php" hash="3ba2042be08c54060b507c91a8fa06c2" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient" line="19" package="Exceptions">
      <name>Exception</name>
      <full_name>\ImboClient\Exception</full_name>
      <docblock line="13">
        <description>Base exception interface</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Exceptions"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
    </interface>
  </file>
  <file path="library/ImboClient/Driver/DriverInterface.php" hash="20dad81093e81cd22e74ddb3fca25bf6" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Driver" line="25" package="Drivers">
      <name>DriverInterface</name>
      <full_name>\ImboClient\Driver\DriverInterface</full_name>
      <docblock line="17">
        <description>Client driver interface</description>
        <long-description>&lt;p&gt;This is an interface for different client drivers.&lt;/p&gt;</long-description>
        <tag line="17" name="package" description="Drivers"/>
        <tag line="17" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <constant namespace="ImboClient\Driver" line="31" package="Drivers">
        <name>GET</name>
        <full_name>GET</full_name>
        <value>'GET'</value>
      </constant>
      <constant namespace="ImboClient\Driver" line="32" package="Drivers">
        <name>POST</name>
        <full_name>POST</full_name>
        <value>'POST'</value>
      </constant>
      <constant namespace="ImboClient\Driver" line="33" package="Drivers">
        <name>PUT</name>
        <full_name>PUT</full_name>
        <value>'PUT'</value>
      </constant>
      <constant namespace="ImboClient\Driver" line="34" package="Drivers">
        <name>HEAD</name>
        <full_name>HEAD</full_name>
        <value>'HEAD'</value>
      </constant>
      <constant namespace="ImboClient\Driver" line="35" package="Drivers">
        <name>DELETE</name>
        <full_name>DELETE</full_name>
        <value>'DELETE'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="47" package="Drivers">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="38">
          <description>POST some data to an URL</description>
          <long-description></long-description>
          <tag line="38" name="param" description="The URL to POST to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="The metadata to POST. The data must be JSON-encoded" type="string" variable="$metadata">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Additional headers to send in this request as an associative array" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="38" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="38" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$metadata</name>
          <default></default>
          <type/>
        </argument>
        <argument line="47">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="57" package="Drivers">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="49">
          <description>PUT a file to an URL</description>
          <long-description></long-description>
          <tag line="49" name="param" description="The URL to PUT to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="Path to the local file" type="string" variable="$filePath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="49" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="57">
          <name>$filePath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="68" package="Drivers">
        <name>putData</name>
        <full_name>putData</full_name>
        <docblock line="59">
          <description>PUT in-memory data to an URL</description>
          <long-description></long-description>
          <tag line="59" name="param" description="The URL to PUT to" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="The data to PUT" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="Additional headers to send in this request as an associative array" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="59" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="68">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="77" package="Drivers">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="70">
          <description>Perform a GET to $url</description>
          <long-description></long-description>
          <tag line="70" name="param" description="The URL to GET" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="70" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="86" package="Drivers">
        <name>head</name>
        <full_name>head</full_name>
        <docblock line="79">
          <description>Perform a HEAD to $url</description>
          <long-description></long-description>
          <tag line="79" name="param" description="The URL to HEAD" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="79" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="95" package="Drivers">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="88">
          <description>Perform a DELETE request to $url</description>
          <long-description></long-description>
          <tag line="88" name="param" description="The URL to DELETE" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="88" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="104" package="Drivers">
        <name>setRequestHeader</name>
        <full_name>setRequestHeader</full_name>
        <docblock line="97">
          <description>Set a request header</description>
          <long-description></long-description>
          <tag line="97" name="param" description="The header key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="The value to send" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="" type="\ImboClient\Driver\DriverInterface">
            <type by_reference="false">\ImboClient\Driver\DriverInterface</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="104">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="112" package="Drivers">
        <name>setRequestHeaders</name>
        <full_name>setRequestHeaders</full_name>
        <docblock line="106">
          <description>Set one or more request headers</description>
          <long-description></long-description>
          <tag line="106" name="param" description="Associative array" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="106" name="return" description="" type="\ImboClient\Driver\DriverInterface">
            <type by_reference="false">\ImboClient\Driver\DriverInterface</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Driver/cURL/Wrapper.php" hash="78cb9b016ea7317d8f1e4a84742d763b" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Driver\cURL" line="20" package="Drivers\cURL">
      <extends/>
      <name>Wrapper</name>
      <full_name>\ImboClient\Driver\cURL\Wrapper</full_name>
      <docblock line="13">
        <description>Wrapper for some of the curl_* functions</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Drivers\cURL"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
        <tag line="13" name="codeCoverageIgnore" description=""/>
      </docblock>
      <property final="false" static="false" visibility="private" line="26" namespace="ImboClient\Driver\cURL" package="Default">
        <name>$handle</name>
        <default></default>
        <docblock line="21">
          <description>cURL handle</description>
          <long-description></long-description>
          <tag line="21" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="33" package="Drivers\cURL">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag line="28" name="param" description="Whether or not to initialize the cURL handle" type="boolean" variable="$init">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="33">
          <name>$init</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="42" package="Drivers\cURL">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="39">
          <description>Initialize the current handle</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="57" package="Drivers\cURL">
        <name>setOptArray</name>
        <full_name>setOptArray</full_name>
        <docblock line="50">
          <description>Set multiple options</description>
          <long-description></long-description>
          <tag line="50" name="param" description="An array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="param" description="An optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="50" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$options</name>
          <default></default>
          <type>array</type>
        </argument>
        <argument line="57">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="66" package="Drivers\cURL">
        <name>close</name>
        <full_name>close</full_name>
        <docblock line="61">
          <description>Close the current handle</description>
          <long-description></long-description>
          <tag line="61" name="param" description="Optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="76" package="Drivers\cURL">
        <name>copy</name>
        <full_name>copy</full_name>
        <docblock line="70">
          <description>Copy the current handle</description>
          <long-description></long-description>
          <tag line="70" name="param" description="Optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="70" name="return" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="88" package="Drivers\cURL">
        <name>setOpt</name>
        <full_name>setOpt</full_name>
        <docblock line="80">
          <description>Set an option</description>
          <long-description></long-description>
          <tag line="80" name="param" description="A CURLOPT_* constant" type="int" variable="$opt">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="param" description="The value to set" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="80" name="param" description="Optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="80" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$opt</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="98" package="Drivers\cURL">
        <name>exec</name>
        <full_name>exec</full_name>
        <docblock line="92">
          <description>Execute a handle</description>
          <long-description></long-description>
          <tag line="92" name="param" description="Optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="92" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver\cURL" line="109" package="Drivers\cURL">
        <name>getInfo</name>
        <full_name>getInfo</full_name>
        <docblock line="102">
          <description>Fetch info from the handle</description>
          <long-description></long-description>
          <tag line="102" name="param" description="One of the CURLINFO_* constants" type="string" variable="$opt">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="Optional cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="102" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$opt</name>
          <default></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$handle</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Driver/cURL.php" hash="f10da1ad830df026eaffefcdcf0139c5" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Driver" line="28" package="Drivers">
      <extends/>
      <implements>\ImboClient\Driver\DriverInterface</implements>
      <name>cURL</name>
      <full_name>\ImboClient\Driver\cURL</full_name>
      <docblock line="20">
        <description>cURL client driver</description>
        <long-description>&lt;p&gt;This class is a driver for the client using the cURL functions.&lt;/p&gt;</long-description>
        <tag line="20" name="package" description="Drivers"/>
        <tag line="20" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="34" namespace="ImboClient\Driver" package="Default">
        <name>$wrapper</name>
        <default></default>
        <docblock line="29">
          <description>cURL wrapper</description>
          <long-description></long-description>
          <tag line="29" name="var" description="" type="\ImboClient\Driver\cURL\Wrapper">
            <type by_reference="false">\ImboClient\Driver\cURL\Wrapper</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="41" namespace="ImboClient\Driver" package="Default">
        <name>$headers</name>
        <default>array('Expect:')</default>
        <docblock line="36">
          <description>Request headers</description>
          <long-description></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="50" namespace="ImboClient\Driver" package="Default">
        <name>$params</name>
        <default>array('timeout' =&gt; 2, 'connectTimeout' =&gt; 2, 'sslVerifyPeer' =&gt; true, 'sslVerifyHost' =&gt; 2, 'sslCaInfo' =&gt; null, 'sslCaPath' =&gt; null)</default>
        <docblock line="45">
          <description>Parameters for the driver</description>
          <long-description></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="69" package="Drivers">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="62">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag line="62" name="param" description="Parameters for the driver" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="param" description="Optional extra cURL options (ref: http://no2.php.net/curl_setopt)" type="array" variable="$curlOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="param" description="Optional wrapper" type="\ImboClient\Driver\cURL\Wrapper" variable="$wrapper">
            <type by_reference="false">\ImboClient\Driver\cURL\Wrapper</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$params</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="69">
          <name>$curlOptions</name>
          <default>array()</default>
          <type>array</type>
        </argument>
        <argument line="69">
          <name>$wrapper</name>
          <default>null</default>
          <type>\ImboClient\Driver\cURL\Wrapper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="100" package="Drivers">
        <name>__destruct</name>
        <full_name>__destruct</full_name>
        <docblock line="97">
          <description>Class destructor</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="107" package="Drivers">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="104">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="107">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$metadata</name>
          <default></default>
          <type/>
        </argument>
        <argument line="107">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="121" package="Drivers">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="118">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="121">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="134" package="Drivers">
        <name>head</name>
        <full_name>head</full_name>
        <docblock line="131">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="134">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="148" package="Drivers">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="145">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="148">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="161" package="Drivers">
        <name>put</name>
        <full_name>put</full_name>
        <docblock line="158">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="161">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="161">
          <name>$filePath</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="178" package="Drivers">
        <name>putData</name>
        <full_name>putData</full_name>
        <docblock line="175">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="178">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$data</name>
          <default></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="192" package="Drivers">
        <name>setRequestHeader</name>
        <full_name>setRequestHeader</full_name>
        <docblock line="189">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="192">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="192">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Driver" line="201" package="Drivers">
        <name>setRequestHeaders</name>
        <full_name>setRequestHeaders</full_name>
        <docblock line="198">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="201">
          <name>$headers</name>
          <default></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="ImboClient\Driver" line="221" package="Drivers">
        <name>request</name>
        <full_name>request</full_name>
        <docblock line="209">
          <description>Make a request</description>
          <long-description>&lt;p&gt;This method will make a request to $url with the current options set in the cURL handle
resource.&lt;/p&gt;</long-description>
          <tag line="209" name="param" description="A cURL handle" type="resource" variable="$handle">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="209" name="param" description="The URL to request" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="param" description="Additional headers to send in this request as an associative array" type="array" variable="$headers">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="209" name="throws" description="" type="\ImboClient\Exception\RuntimeException|\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\RuntimeException</type>
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$handle</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$url</name>
          <default></default>
          <type/>
        </argument>
        <argument line="221">
          <name>$headers</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="104" code="50015">Argument $url is missing from the Docblock of post()</error>
      <error line="104" code="50015">Argument $metadata is missing from the Docblock of post()</error>
      <error line="104" code="50015">Argument $headers is missing from the Docblock of post()</error>
      <error line="118" code="50015">Argument $url is missing from the Docblock of get()</error>
      <error line="131" code="50015">Argument $url is missing from the Docblock of head()</error>
      <error line="145" code="50015">Argument $url is missing from the Docblock of delete()</error>
      <error line="158" code="50015">Argument $url is missing from the Docblock of put()</error>
      <error line="158" code="50015">Argument $filePath is missing from the Docblock of put()</error>
      <error line="175" code="50015">Argument $url is missing from the Docblock of putData()</error>
      <error line="175" code="50015">Argument $data is missing from the Docblock of putData()</error>
      <error line="175" code="50015">Argument $headers is missing from the Docblock of putData()</error>
      <error line="189" code="50015">Argument $key is missing from the Docblock of setRequestHeader()</error>
      <error line="189" code="50015">Argument $value is missing from the Docblock of setRequestHeader()</error>
      <error line="198" code="50015">Argument $headers is missing from the Docblock of setRequestHeaders()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Exception/ServerException.php" hash="08cab33cfd4c73c6edc1352cf2ca4c7d" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Exception" line="23" package="Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\ImboClient\Exception</implements>
      <name>ServerException</name>
      <full_name>\ImboClient\Exception\ServerException</full_name>
      <docblock line="17">
        <description>Runtime exception</description>
        <long-description></long-description>
        <tag line="17" name="package" description="Exceptions"/>
        <tag line="17" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="29" namespace="ImboClient\Exception" package="Default">
        <name>$response</name>
        <default></default>
        <docblock line="24">
          <description>Response instance</description>
          <long-description></long-description>
          <tag line="24" name="var" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="38" package="Exceptions">
        <name>setResponse</name>
        <full_name>setResponse</full_name>
        <docblock line="31">
          <description>Set the response instance</description>
          <long-description></long-description>
          <tag line="31" name="param" description="The response object containing info about the server&#10;                                   response." type="\ImboClient\Http\Response\ResponseInterface" variable="$response">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
          <tag line="31" name="return" description="" type="\ImboClient\Exception\ServerException">
            <type by_reference="false">\ImboClient\Exception\ServerException</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$response</name>
          <default></default>
          <type>\ImboClient\Http\Response\ResponseInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Exception" line="52" package="Exceptions">
        <name>getResponse</name>
        <full_name>getResponse</full_name>
        <docblock line="44">
          <description>Get the response instance</description>
          <long-description>&lt;p&gt;If the cURL driver causes an error that ends in the client not being able to set a proper
response this method must return null.&lt;/p&gt;</long-description>
          <tag line="44" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface|null">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="library/ImboClient/Exception/InvalidArgumentException.php" hash="8f8e0931279eb791feaa25748e3eb4a6" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Exception" line="22" package="Exceptions">
      <extends>\InvalidArgumentException</extends>
      <implements>\ImboClient\Exception</implements>
      <name>InvalidArgumentException</name>
      <full_name>\ImboClient\Exception\InvalidArgumentException</full_name>
      <docblock line="16">
        <description>Invalid argument exception</description>
        <long-description></long-description>
        <tag line="16" name="package" description="Exceptions"/>
        <tag line="16" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
    </class>
  </file>
  <file path="library/ImboClient/Exception/RuntimeException.php" hash="d0f4ba80872ca708e5ab98263abd6588" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Exception" line="22" package="Exceptions">
      <extends>\RuntimeException</extends>
      <implements>\ImboClient\Exception</implements>
      <name>RuntimeException</name>
      <full_name>\ImboClient\Exception\RuntimeException</full_name>
      <docblock line="16">
        <description>Runtime exception</description>
        <long-description></long-description>
        <tag line="16" name="package" description="Exceptions"/>
        <tag line="16" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
    </class>
  </file>
  <file path="library/ImboClient/Http/HeaderContainerInterface.php" hash="7abf9e906e2dd96c71a35cac2b92862e" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Http" line="19" package="Http">
      <name>HeaderContainerInterface</name>
      <full_name>\ImboClient\Http\HeaderContainerInterface</full_name>
      <docblock line="13">
        <description>Parameter container interface</description>
        <long-description></long-description>
        <tag line="13" name="package" description="Http"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="25" package="Http">
        <name>getAll</name>
        <full_name>getAll</full_name>
        <docblock line="20">
          <description>Get all parameters as an associative array</description>
          <long-description></long-description>
          <tag line="20" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="34" package="Http">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="27">
          <description>Set a parameter value</description>
          <long-description></long-description>
          <tag line="27" name="param" description="The key to store the value to" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="The value itself" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="27" name="return" description="" type="\ImboClient\Http\HeaderContainerInterface">
            <type by_reference="false">\ImboClient\Http\HeaderContainerInterface</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="34">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="43" package="Http">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="36">
          <description>Get a parameter value</description>
          <long-description></long-description>
          <tag line="36" name="param" description="The key to fetch" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="param" description="If the key does not exist, return this value instead" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="36" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="43">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="43">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="51" package="Http">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="45">
          <description>Remove a single value from the parameter list</description>
          <long-description></long-description>
          <tag line="45" name="param" description="The key to remove" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="" type="\ImboClient\Http\HeaderContainerInterface">
            <type by_reference="false">\ImboClient\Http\HeaderContainerInterface</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="59" package="Http">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="53">
          <description>See if the container has a given key</description>
          <long-description></long-description>
          <tag line="53" name="param" description="The key to check for" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="library/ImboClient/Http/HeaderContainer.php" hash="8e27adc30a09dc071c496f43b3a4d8cc" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Http" line="21" package="Http">
      <extends/>
      <implements>\ImboClient\Http\HeaderContainerInterface</implements>
      <name>HeaderContainer</name>
      <full_name>\ImboClient\Http\HeaderContainer</full_name>
      <docblock line="13">
        <description>Header container</description>
        <long-description>&lt;p&gt;This container contains HTTP headers along with some methods for normalizing the header names.&lt;/p&gt;</long-description>
        <tag line="13" name="package" description="Http"/>
        <tag line="13" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="27" namespace="ImboClient\Http" package="Default">
        <name>$parameters</name>
        <default></default>
        <docblock line="22">
          <description>Parameters in the container</description>
          <long-description></long-description>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="34" package="Http">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="29">
          <description>Class constructor</description>
          <long-description></long-description>
          <tag line="29" name="param" description="Parameters to store in the container" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$parameters</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="43" package="Http">
        <name>getAll</name>
        <full_name>getAll</full_name>
        <docblock line="40">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="50" package="Http">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="47">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="50">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$value</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="60" package="Http">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="57">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="60">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$default</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="69" package="Http">
        <name>remove</name>
        <full_name>remove</full_name>
        <docblock line="66">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="69">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http" line="79" package="Http">
        <name>has</name>
        <full_name>has</full_name>
        <docblock line="76">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="79">
          <name>$key</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="ImboClient\Http" line="91" package="Http">
        <name>getName</name>
        <full_name>getName</full_name>
        <docblock line="85">
          <description>Normalize the header name</description>
          <long-description></long-description>
          <tag line="85" name="param" description="The name to normalize, for instance &quot;IF_MODIFIED_SINCE&quot;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="85" name="return" description="The normalized name, for instance &quot;if-modified-since&quot;" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$name</name>
          <default></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="47" code="50015">Argument $key is missing from the Docblock of set()</error>
      <error line="47" code="50015">Argument $value is missing from the Docblock of set()</error>
      <error line="57" code="50015">Argument $key is missing from the Docblock of get()</error>
      <error line="57" code="50015">Argument $default is missing from the Docblock of get()</error>
      <error line="66" code="50015">Argument $key is missing from the Docblock of remove()</error>
      <error line="76" code="50015">Argument $key is missing from the Docblock of has()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Http/Response/Response.php" hash="cab99ec75e01c0b3670f7a9101ddbf36" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <class final="false" abstract="false" namespace="ImboClient\Http\Response" line="22" package="Http">
      <extends/>
      <implements>\ImboClient\Http\Response\ResponseInterface</implements>
      <name>Response</name>
      <full_name>\ImboClient\Http\Response\Response</full_name>
      <docblock line="16">
        <description>Client response</description>
        <long-description></long-description>
        <tag line="16" name="package" description="Http"/>
        <tag line="16" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="28" namespace="ImboClient\Http\Response" package="Default">
        <name>$headers</name>
        <default></default>
        <docblock line="23">
          <description>Response headers</description>
          <long-description></long-description>
          <tag line="23" name="var" description="" type="\ImboClient\Http\HeaderContainerInterface">
            <type by_reference="false">\ImboClient\Http\HeaderContainerInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="35" namespace="ImboClient\Http\Response" package="Default">
        <name>$body</name>
        <default></default>
        <docblock line="30">
          <description>Response body</description>
          <long-description></long-description>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="42" namespace="ImboClient\Http\Response" package="Default">
        <name>$statusCode</name>
        <default></default>
        <docblock line="37">
          <description>HTTP status code</description>
          <long-description></long-description>
          <tag line="37" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="47" package="Http">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="44">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="54" package="Http">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="51">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="54">
          <name>$headers</name>
          <default></default>
          <type>\ImboClient\Http\HeaderContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="63" package="Http">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="60">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="70" package="Http">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="67">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="70">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="79" package="Http">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="76">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="86" package="Http">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="83">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
        <argument line="86">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="95" package="Http">
        <name>getImboErrorCode</name>
        <full_name>getImboErrorCode</full_name>
        <docblock line="92">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="112" package="Http">
        <name>isSuccess</name>
        <full_name>isSuccess</full_name>
        <docblock line="109">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="121" package="Http">
        <name>isError</name>
        <full_name>isError</full_name>
        <docblock line="118">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="128" package="Http">
        <name>getImageIdentifier</name>
        <full_name>getImageIdentifier</full_name>
        <docblock line="125">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="135" package="Http">
        <name>asArray</name>
        <full_name>asArray</full_name>
        <docblock line="132">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="142" package="Http">
        <name>asObject</name>
        <full_name>asObject</full_name>
        <docblock line="139">
          <description>{@inheritdoc}</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="153" package="Http">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="146">
          <description>Magic to string method</description>
          <long-description>&lt;p&gt;This magic method returns the body&lt;/p&gt;</long-description>
          <tag line="146" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="51" code="50015">Argument $headers is missing from the Docblock of setHeaders()</error>
      <error line="67" code="50015">Argument $body is missing from the Docblock of setBody()</error>
      <error line="83" code="50015">Argument $code is missing from the Docblock of setStatusCode()</error>
    </parse_markers>
  </file>
  <file path="library/ImboClient/Http/Response/ResponseInterface.php" hash="72691049d6a410c3c7d41a3d9aa60025" package="Default">
    <docblock line="2">
      <description>This file is part of the ImboClient package</description>
      <long-description>&lt;p&gt;(c) Christer Edvartsen &lt;a href="&amp;#x6d;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;"&gt;&amp;#99;o&amp;#x67;&amp;#x6f;&amp;#64;&amp;#115;&amp;#x74;&amp;#x61;&amp;#114;&amp;#122;i&amp;#x6e;&amp;#x67;&amp;#101;&amp;#114;&amp;#x2e;&amp;#x6e;&amp;#101;&amp;#116;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the full copyright and license information, please view the LICENSE file that was
distributed with this source code.&lt;/p&gt;</long-description>
    </docblock>
    <interface namespace="ImboClient\Http\Response" line="21" package="Http">
      <name>ResponseInterface</name>
      <full_name>\ImboClient\Http\Response\ResponseInterface</full_name>
      <docblock line="15">
        <description>Client response interface</description>
        <long-description></long-description>
        <tag line="15" name="package" description="Http"/>
        <tag line="15" name="author" description="Christer Edvartsen &lt;cogo@starzinger.net&gt;"/>
      </docblock>
      <constant namespace="ImboClient\Http\Response" line="27" package="Http">
        <name>ERR_UNSPECIFIED</name>
        <full_name>ERR_UNSPECIFIED</full_name>
        <value>0</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="30" package="Http">
        <name>AUTH_UNKNOWN_PUBLIC_KEY</name>
        <full_name>AUTH_UNKNOWN_PUBLIC_KEY</full_name>
        <value>100</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="31" package="Http">
        <name>AUTH_MISSING_PARAM</name>
        <full_name>AUTH_MISSING_PARAM</full_name>
        <value>101</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="32" package="Http">
        <name>AUTH_INVALID_TIMESTAMP</name>
        <full_name>AUTH_INVALID_TIMESTAMP</full_name>
        <value>102</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="33" package="Http">
        <name>AUTH_SIGNATURE_MISMATCH</name>
        <full_name>AUTH_SIGNATURE_MISMATCH</full_name>
        <value>103</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="36" package="Http">
        <name>IMAGE_ALREADY_EXISTS</name>
        <full_name>IMAGE_ALREADY_EXISTS</full_name>
        <value>200</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="37" package="Http">
        <name>IMAGE_NO_IMAGE_ATTACHED</name>
        <full_name>IMAGE_NO_IMAGE_ATTACHED</full_name>
        <value>201</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="38" package="Http">
        <name>IMAGE_HASH_MISMATCH</name>
        <full_name>IMAGE_HASH_MISMATCH</full_name>
        <value>202</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="39" package="Http">
        <name>IMAGE_UNSUPPORTED_MIMETYPE</name>
        <full_name>IMAGE_UNSUPPORTED_MIMETYPE</full_name>
        <value>203</value>
      </constant>
      <constant namespace="ImboClient\Http\Response" line="40" package="Http">
        <name>IMAGE_BROKEN_IMAGE</name>
        <full_name>IMAGE_BROKEN_IMAGE</full_name>
        <value>204</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="48" package="Http">
        <name>getHeaders</name>
        <full_name>getHeaders</full_name>
        <docblock line="43">
          <description>Get the headers</description>
          <long-description></long-description>
          <tag line="43" name="return" description="" type="\ImboClient\Http\HeaderContainerInterface">
            <type by_reference="false">\ImboClient\Http\HeaderContainerInterface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="56" package="Http">
        <name>setHeaders</name>
        <full_name>setHeaders</full_name>
        <docblock line="50">
          <description>Set the headers</description>
          <long-description></long-description>
          <tag line="50" name="param" description="The headers to set" type="\ImboClient\Http\HeaderContainerInterface" variable="$headers">
            <type by_reference="false">\ImboClient\Http\HeaderContainerInterface</type>
          </tag>
          <tag line="50" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$headers</name>
          <default></default>
          <type>\ImboClient\Http\HeaderContainerInterface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="63" package="Http">
        <name>getBody</name>
        <full_name>getBody</full_name>
        <docblock line="58">
          <description>Get the response body</description>
          <long-description></long-description>
          <tag line="58" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="71" package="Http">
        <name>setBody</name>
        <full_name>setBody</full_name>
        <docblock line="65">
          <description>Set the body contents</description>
          <long-description></long-description>
          <tag line="65" name="param" description="The string to set" type="string" variable="$body">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$body</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="78" package="Http">
        <name>getStatusCode</name>
        <full_name>getStatusCode</full_name>
        <docblock line="73">
          <description>Get the status code</description>
          <long-description></long-description>
          <tag line="73" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="86" package="Http">
        <name>setStatusCode</name>
        <full_name>setStatusCode</full_name>
        <docblock line="80">
          <description>Set the status code</description>
          <long-description></long-description>
          <tag line="80" name="param" description="The HTTP status code to set" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="" type="\ImboClient\Http\Response\ResponseInterface">
            <type by_reference="false">\ImboClient\Http\Response\ResponseInterface</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$code</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="93" package="Http">
        <name>getImboErrorCode</name>
        <full_name>getImboErrorCode</full_name>
        <docblock line="88">
          <description>Get the optional imbo error code from the body</description>
          <long-description></long-description>
          <tag line="88" name="return" description="" type="null|int">
            <type by_reference="false">null</type>
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="100" package="Http">
        <name>isSuccess</name>
        <full_name>isSuccess</full_name>
        <docblock line="95">
          <description>Whether or not the response is a success (in the 2xx range)</description>
          <long-description></long-description>
          <tag line="95" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="107" package="Http">
        <name>isError</name>
        <full_name>isError</full_name>
        <docblock line="102">
          <description>Whether or not the response is an error (&gt; 4xx range)</description>
          <long-description></long-description>
          <tag line="102" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="117" package="Http">
        <name>getImageIdentifier</name>
        <full_name>getImageIdentifier</full_name>
        <docblock line="109">
          <description>Returns the image identifier associated with the response</description>
          <long-description>&lt;p&gt;If the response does not contain any image identitifer (for instance if the reguest made was
against the metadat resource) NULL will be returned.&lt;/p&gt;</long-description>
          <tag line="109" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="124" package="Http">
        <name>asArray</name>
        <full_name>asArray</full_name>
        <docblock line="119">
          <description>Return the body as an array</description>
          <long-description></long-description>
          <tag line="119" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="ImboClient\Http\Response" line="131" package="Http">
        <name>asObject</name>
        <full_name>asObject</full_name>
        <docblock line="126">
          <description>Return the body as an object</description>
          <long-description></long-description>
          <tag line="126" name="return" description="" type="\ImboClient\Http\Response\stdClass">
            <type by_reference="false">\ImboClient\Http\Response\stdClass</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <package name="Client" full_name="Client"/>
  <package name="Default" full_name="Default"/>
  <package name="Drivers" full_name="Drivers">
    <package name="cURL" full_name="Drivers\cURL"/>
  </package>
  <package name="Exceptions" full_name="Exceptions"/>
  <package name="Http" full_name="Http"/>
  <package name="Test suite" full_name="Test suite"/>
  <package name="Urls" full_name="Urls">
    <package name="Access token" full_name="Urls\Access token"/>
    <package name="Image" full_name="Urls\Image"/>
    <package name="Images" full_name="Urls\Images"/>
    <package name="Metadata" full_name="Urls\Metadata"/>
    <package name="Status" full_name="Urls\Status"/>
    <package name="User" full_name="Urls\User"/>
  </package>
  <package name="Version" full_name="Version"/>
  <namespace name="ImboClient" full_name="ImboClient">
    <namespace name="Driver" full_name="ImboClient\Driver">
      <namespace name="cURL" full_name="ImboClient\Driver\cURL"/>
    </namespace>
    <namespace name="Exception" full_name="ImboClient\Exception"/>
    <namespace name="Http" full_name="ImboClient\Http">
      <namespace name="Response" full_name="ImboClient\Http\Response"/>
    </namespace>
    <namespace name="Url" full_name="ImboClient\Url">
      <namespace name="Images" full_name="ImboClient\Url\Images"/>
    </namespace>
  </namespace>
  <marker count="0">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
